{
  "version": 3,
  "sources": [
    "node_modules/browser-pack/_prelude.js",
    "node_modules/browser-resolve/empty.js",
    "src/constraint/base.js",
    "src/constraint/encoding.js",
    "src/constraint/spec.js",
    "src/cql.js",
    "src/generate.js",
    "src/group.js",
    "src/model.js",
    "src/property.js",
    "src/query.js",
    "src/schema.js",
    "src/stats.js",
    "src/util.js",
    "../vega-lite/node_modules/d3-time/build/d3-time.js",
    "../vega-lite/node_modules/datalib/src/bins/bins.js",
    "../vega-lite/node_modules/datalib/src/generate.js",
    "../vega-lite/node_modules/datalib/src/time.js",
    "../vega-lite/node_modules/datalib/src/util.js",
    "../vega-lite/node_modules/json-stable-stringify/index.js",
    "../vega-lite/node_modules/jsonify/index.js",
    "../vega-lite/node_modules/jsonify/lib/parse.js",
    "../vega-lite/node_modules/jsonify/lib/stringify.js",
    "../vega-lite/src/Type.js",
    "../vega-lite/src/aggregate.js",
    "../vega-lite/src/channel.js",
    "../vega-lite/src/encoding.js",
    "../vega-lite/src/mark.js",
    "../vega-lite/src/timeunit.js",
    "../vega-lite/src/util.js"
  ],
  "names": [],
  "mappings": "AAAA;ACAA;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACprrVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClrtOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzjjzxpSA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpjzzHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACxFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA",
  "file": "generated.js",
  "sourceRoot": "",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    "",
    "\"use strict\";\nvar AbstractConstraintModel = (function () {\n    function AbstractConstraintModel(constraint) {\n        this.constraint = constraint;\n    }\n    AbstractConstraintModel.prototype.name = function () {\n        return this.constraint.name;\n    };\n    AbstractConstraintModel.prototype.description = function () {\n        return this.constraint.description;\n    };\n    AbstractConstraintModel.prototype.properties = function () {\n        return this.constraint.properties;\n    };\n    AbstractConstraintModel.prototype.strict = function () {\n        return this.constraint.strict;\n    };\n    return AbstractConstraintModel;\n}());\nexports.AbstractConstraintModel = AbstractConstraintModel;\n//# sourceMappingURL=base.js.map",
    "\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar channel_1 = require('vega-lite/src/channel');\nvar type_1 = require('vega-lite/src/type');\nvar property_1 = require('../property');\nvar query_1 = require('../query');\nvar schema_1 = require('../schema');\nvar util_1 = require('../util');\nvar base_1 = require('./base');\nvar EncodingConstraintModel = (function (_super) {\n    __extends(EncodingConstraintModel, _super);\n    function EncodingConstraintModel(constraint) {\n        _super.call(this, constraint);\n    }\n    EncodingConstraintModel.prototype.satisfy = function (encQ, schema, stats, opt) {\n        if (this.constraint.requireAllProperties) {\n            var hasRequiredPropertyAsEnumSpec = util_1.some(this.constraint.properties, function (prop) { return query_1.isEnumSpec(encQ[prop]); });\n            if (hasRequiredPropertyAsEnumSpec) {\n                return true;\n            }\n        }\n        return this.constraint.satisfy(encQ, schema, stats, opt);\n    };\n    return EncodingConstraintModel;\n}(base_1.AbstractConstraintModel));\nexports.EncodingConstraintModel = EncodingConstraintModel;\nexports.ENCODING_CONSTRAINTS = [\n    {\n        name: 'aggregateOpSupportedByType',\n        description: 'Aggregate function should be supported by data type.',\n        properties: [property_1.Property.TYPE, property_1.Property.AGGREGATE],\n        requireAllProperties: true,\n        strict: true,\n        satisfy: function (encQ, schema, stats, opt) {\n            if (encQ.aggregate) {\n                return encQ.type !== type_1.Type.ORDINAL && encQ.type !== type_1.Type.NOMINAL;\n            }\n            return true;\n        }\n    }, {\n        name: 'binAppliedForQuantitative',\n        description: 'bin should be applied to quantitative field only.',\n        properties: [property_1.Property.TYPE, property_1.Property.BIN],\n        requireAllProperties: true,\n        strict: true,\n        satisfy: function (encQ, schema, stats, opt) {\n            if (encQ.bin) {\n                return encQ.type === type_1.Type.QUANTITATIVE;\n            }\n            return true;\n        }\n    }, {\n        name: 'channelSupportsRole',\n        description: 'encoding channel should support the role of the field',\n        properties: [property_1.Property.CHANNEL, property_1.Property.TYPE, property_1.Property.BIN, property_1.Property.TIMEUNIT],\n        requireAllProperties: false,\n        strict: true,\n        satisfy: function (encQ, schema, opt) {\n            if (query_1.isEnumSpec(encQ.channel))\n                return true;\n            var supportedRole = channel_1.getSupportedRole(encQ.channel);\n            if (query_1.isDimension(encQ)) {\n                return supportedRole.dimension;\n            }\n            else if (query_1.isMeasure(encQ)) {\n                return supportedRole.measure;\n            }\n            return true;\n        }\n    }, {\n        name: 'onlyOneTypeOfFunction',\n        description: 'Only of of aggregate, autoCount, timeUnit, or bin should be applied at the same time.',\n        properties: [property_1.Property.AGGREGATE, property_1.Property.AUTOCOUNT, property_1.Property.TIMEUNIT, property_1.Property.BIN],\n        requireAllProperties: false,\n        strict: true,\n        satisfy: function (encQ, schema, stats, opt) {\n            var numFn = (!query_1.isEnumSpec(encQ.aggregate) && !!encQ.aggregate ? 1 : 0) +\n                (!query_1.isEnumSpec(encQ.autoCount) && !!encQ.autoCount ? 1 : 0) +\n                (!query_1.isEnumSpec(encQ.bin) && !!encQ.bin ? 1 : 0) +\n                (!query_1.isEnumSpec(encQ.timeUnit) && !!encQ.timeUnit ? 1 : 0);\n            return numFn <= 1;\n        }\n    }, {\n        name: 'timeUnitAppliedForTemporal',\n        description: 'Time unit should be applied to temporal field only.',\n        properties: [property_1.Property.TYPE, property_1.Property.TIMEUNIT],\n        requireAllProperties: true,\n        strict: true,\n        satisfy: function (encQ, schema, stats, opt) {\n            if (encQ.timeUnit && encQ.type !== type_1.Type.TEMPORAL) {\n                return false;\n            }\n            return true;\n        }\n    },\n    {\n        name: 'typeMatchesPrimitiveType',\n        description: 'Data type should be supported by field\\'s primitive type.',\n        properties: [property_1.Property.FIELD, property_1.Property.TYPE],\n        requireAllProperties: true,\n        strict: true,\n        satisfy: function (encQ, schema, stats, opt) {\n            var primitiveType = schema.primitiveType(encQ.field);\n            var type = encQ.type;\n            switch (primitiveType) {\n                case schema_1.PrimitiveType.BOOLEAN:\n                case schema_1.PrimitiveType.STRING:\n                    return type !== type_1.Type.QUANTITATIVE && type !== type_1.Type.TEMPORAL;\n                case schema_1.PrimitiveType.NUMBER:\n                case schema_1.PrimitiveType.INTEGER:\n                    return type !== type_1.Type.TEMPORAL;\n                case schema_1.PrimitiveType.DATE:\n                    return type === type_1.Type.TEMPORAL;\n                case null:\n                    return false;\n            }\n            throw new Error('Not implemented');\n        }\n    },\n    {\n        name: 'typeMatchesSchemaType',\n        description: 'Enumerated data type of a field should match the field\\'s type in the schema.',\n        properties: [property_1.Property.FIELD, property_1.Property.TYPE],\n        requireAllProperties: true,\n        strict: false,\n        satisfy: function (encQ, schema, stats, opt) {\n            return schema.type(encQ.field) === encQ.type;\n        }\n    }, {\n        name: 'maxCardinalityForCategoricalColor',\n        description: 'Categorical channel should not have too high cardinality',\n        properties: [property_1.Property.CHANNEL, property_1.Property.FIELD],\n        requireAllProperties: true,\n        strict: false,\n        satisfy: function (encQ, schema, stats, opt) {\n            if (encQ.channel === channel_1.Channel.COLOR && encQ.type === type_1.Type.NOMINAL) {\n                return stats.cardinality(encQ) <= opt.maxCardinalityForCategoricalColor;\n            }\n            return true;\n        }\n    }, {\n        name: 'maxCardinalityForFacet',\n        description: 'Row/column channel should not have too high cardinality',\n        properties: [property_1.Property.CHANNEL, property_1.Property.FIELD, property_1.Property.BIN, property_1.Property.TIMEUNIT],\n        requireAllProperties: true,\n        strict: false,\n        satisfy: function (encQ, schema, stats, opt) {\n            if (encQ.channel === channel_1.Channel.ROW || encQ.channel === channel_1.Channel.COLUMN) {\n                return stats.cardinality(encQ) <= opt.maxCardinalityForFacet;\n            }\n            return true;\n        }\n    }, {\n        name: 'maxCardinalityForShape',\n        description: 'Shape channel should not have too high cardinality',\n        properties: [property_1.Property.CHANNEL, property_1.Property.FIELD, property_1.Property.BIN, property_1.Property.TIMEUNIT],\n        requireAllProperties: true,\n        strict: false,\n        satisfy: function (encQ, schema, stats, opt) {\n            if (encQ.channel === channel_1.Channel.SHAPE) {\n                return stats.cardinality(encQ) <= opt.maxCardinalityForShape;\n            }\n            return true;\n        }\n    }\n].map(function (ec) { return new EncodingConstraintModel(ec); });\nexports.ENCODING_CONSTRAINT_INDEX = exports.ENCODING_CONSTRAINTS.reduce(function (m, ec) {\n    m[ec.name()] = ec;\n    return m;\n}, {});\nexports.ENCODING_CONSTRAINTS_BY_PROPERTY = exports.ENCODING_CONSTRAINTS.reduce(function (m, c) {\n    c.properties().forEach(function (prop) {\n        m[prop] = m[prop] || [];\n        m[prop].push(c);\n    });\n    return m;\n}, {});\n//# sourceMappingURL=encoding.js.map",
    "\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar channel_1 = require('vega-lite/src/channel');\nvar mark_1 = require('vega-lite/src/mark');\nvar type_1 = require('vega-lite/src/type');\nvar base_1 = require('./base');\nvar property_1 = require('../property');\nvar query_1 = require('../query');\nvar util_1 = require('../util');\nvar SpecConstraintModel = (function (_super) {\n    __extends(SpecConstraintModel, _super);\n    function SpecConstraintModel(specConstraint) {\n        _super.call(this, specConstraint);\n    }\n    SpecConstraintModel.prototype.satisfy = function (specQ, schema, stats, opt) {\n        if (this.constraint.requireAllProperties) {\n            var hasRequiredPropertyAsEnumSpec = util_1.some(this.constraint.properties, function (prop) {\n                switch (prop) {\n                    case property_1.Property.MARK:\n                        return query_1.isEnumSpec(specQ.getMark());\n                    case property_1.Property.CHANNEL:\n                    case property_1.Property.AGGREGATE:\n                    case property_1.Property.BIN:\n                    case property_1.Property.TIMEUNIT:\n                    case property_1.Property.FIELD:\n                    case property_1.Property.TYPE:\n                        return util_1.some(specQ.getEncodings(), function (encQ) {\n                            return query_1.isEnumSpec(encQ[prop]);\n                        });\n                    default:\n                        throw new Error('Unimplemnted');\n                }\n            });\n            if (hasRequiredPropertyAsEnumSpec) {\n                return true;\n            }\n        }\n        return this.constraint.satisfy(specQ, schema, stats, opt);\n    };\n    return SpecConstraintModel;\n}(base_1.AbstractConstraintModel));\nexports.SpecConstraintModel = SpecConstraintModel;\nfunction satisfyPreferredType(theType, configName) {\n    return function (specQ, schema, stats, opt) {\n        var xEncQ = specQ.getEncodingQueryByChannel(channel_1.Channel.X);\n        var yEncQ = specQ.getEncodingQueryByChannel(channel_1.Channel.Y);\n        var xIsTheType = xEncQ && xEncQ.type === theType;\n        var yIsTheType = yEncQ && yEncQ.type === theType;\n        return !yEncQ || !xEncQ ||\n            (xIsTheType && yIsTheType) ||\n            (!xIsTheType && !yIsTheType) ||\n            (xIsTheType && opt[configName] === channel_1.Channel.X) ||\n            (yIsTheType && opt[configName] === channel_1.Channel.Y);\n    };\n}\nexports.SPEC_CONSTRAINTS = [\n    {\n        name: 'autoAddCount',\n        description: 'Automatically adding count only for plots with only ordinal, binned quantitative, or temporal with timeunti fields.',\n        properties: [property_1.Property.BIN, property_1.Property.TIMEUNIT, property_1.Property.TYPE, property_1.Property.AUTOCOUNT],\n        requireAllProperties: false,\n        strict: false,\n        satisfy: function (specQ, schema, stats, opt) {\n            var hasAutoCount = util_1.some(specQ.getEncodings(), function (encQ) { return encQ.autoCount === true; });\n            if (hasAutoCount) {\n                return util_1.every(specQ.getEncodings(), function (encQ) {\n                    if (encQ.autoCount !== undefined) {\n                        return true;\n                    }\n                    switch (encQ.type) {\n                        case type_1.Type.QUANTITATIVE:\n                            return !!encQ.bin;\n                        case type_1.Type.TEMPORAL:\n                            return !!encQ.timeUnit;\n                        case type_1.Type.ORDINAL:\n                        case type_1.Type.NOMINAL:\n                            return true;\n                    }\n                    throw new Error('Unsupported Type');\n                });\n            }\n            else {\n                var neverHaveAutoCount = util_1.every(specQ.enumSpecIndex.autoCount, function (indexTuple) {\n                    return !query_1.isEnumSpec(specQ.getEncodingQueryByIndex(indexTuple.index).autoCount);\n                });\n                if (neverHaveAutoCount) {\n                    return util_1.some(specQ.getEncodings(), function (encQ) {\n                        if (encQ.type === type_1.Type.QUANTITATIVE) {\n                            if (encQ.autoCount === false) {\n                                return false;\n                            }\n                            else {\n                                return !encQ.bin || query_1.isEnumSpec(encQ.bin);\n                            }\n                        }\n                        else if (encQ.type === type_1.Type.TEMPORAL) {\n                            return !encQ.timeUnit || query_1.isEnumSpec(encQ.timeUnit);\n                        }\n                        return false;\n                    });\n                }\n            }\n            return true;\n        }\n    },\n    {\n        name: 'channelPermittedByMarkType',\n        description: 'Each encoding channel should be supported by the mark type',\n        properties: [property_1.Property.CHANNEL, property_1.Property.MARK],\n        requireAllProperties: false,\n        strict: true,\n        satisfy: function (specQ, schema, stats, opt) {\n            var mark = specQ.getMark();\n            if (query_1.isEnumSpec(mark))\n                return true;\n            return util_1.every(specQ.getEncodings(), function (encQ) {\n                if (query_1.isEnumSpec(encQ.channel))\n                    return true;\n                return channel_1.supportMark(encQ.channel, mark);\n            });\n        }\n    },\n    {\n        name: 'hasAllRequiredChannelsForMark',\n        description: 'All required channels for the specified mark should be specified',\n        properties: [property_1.Property.CHANNEL, property_1.Property.MARK],\n        requireAllProperties: true,\n        strict: true,\n        satisfy: function (specQ, schema, stats, opt) {\n            var mark = specQ.getMark();\n            switch (mark) {\n                case mark_1.Mark.AREA:\n                case mark_1.Mark.LINE:\n                    return specQ.channelUsed(channel_1.Channel.X) && specQ.channelUsed(channel_1.Channel.Y);\n                case mark_1.Mark.TEXT:\n                    return specQ.channelUsed(channel_1.Channel.TEXT);\n                case mark_1.Mark.BAR:\n                case mark_1.Mark.CIRCLE:\n                case mark_1.Mark.POINT:\n                case mark_1.Mark.SQUARE:\n                case mark_1.Mark.TICK:\n                    return true;\n                case mark_1.Mark.RULE:\n                    return specQ.channelUsed(channel_1.Channel.X) || specQ.channelUsed(channel_1.Channel.Y);\n            }\n            throw new Error('hasAllRequiredChannelsForMark not implemented for mark' + mark);\n        }\n    },\n    {\n        name: 'omitFacetOverPositionalChannels',\n        description: 'Do not use non-positional channels unless all positional channels are used',\n        properties: [property_1.Property.CHANNEL],\n        requireAllProperties: true,\n        strict: false,\n        satisfy: function (specQ, schema, stats, opt) {\n            return specQ.channelUsed(channel_1.Channel.ROW) || specQ.channelUsed(channel_1.Channel.COLUMN) ?\n                specQ.channelUsed(channel_1.Channel.X) && specQ.channelUsed(channel_1.Channel.Y) :\n                true;\n        }\n    },\n    {\n        name: 'omitMultipleNonPositionalChannels',\n        description: 'Do not use multiple non-positional encoding channel to avoid over-encoding.',\n        properties: [property_1.Property.CHANNEL],\n        requireAllProperties: false,\n        strict: false,\n        satisfy: function (specQ, schema, stats, opt) {\n            var encodings = specQ.getEncodings();\n            var nonPositionChannelCount = 0;\n            for (var i = 0; i < encodings.length; i++) {\n                var channel = encodings[i].channel;\n                if (!query_1.isEnumSpec(channel)) {\n                    if (channel === channel_1.Channel.COLOR || channel === channel_1.Channel.SHAPE || channel === channel_1.Channel.SIZE) {\n                        nonPositionChannelCount += 1;\n                        if (nonPositionChannelCount > 1) {\n                            return false;\n                        }\n                    }\n                }\n            }\n            return true;\n        }\n    },\n    {\n        name: 'omitNonPositionalOverPositionalChannels',\n        description: 'Do not use non-positional channels unless all positional channels are used',\n        properties: [property_1.Property.CHANNEL],\n        requireAllProperties: true,\n        strict: false,\n        satisfy: function (specQ, schema, stats, opt) {\n            return util_1.some(channel_1.NONSPATIAL_CHANNELS, function (channel) { return specQ.channelUsed(channel); }) ?\n                specQ.channelUsed(channel_1.Channel.X) && specQ.channelUsed(channel_1.Channel.Y) :\n                true;\n        }\n    },\n    {\n        name: 'omitRawBarLineArea',\n        description: 'Don\\'t use bar, line or area to visualize raw plot as they often lead to occlusion.',\n        properties: [property_1.Property.MARK, property_1.Property.AGGREGATE],\n        requireAllProperties: true,\n        strict: false,\n        satisfy: function (specQ, schema, stats, opt) {\n            if (util_1.isin(specQ.getMark(), [mark_1.Mark.BAR, mark_1.Mark.LINE, mark_1.Mark.AREA])) {\n                return specQ.isAggregate();\n            }\n            return true;\n        }\n    },\n    {\n        name: 'omitRawContinuousFieldForAggregatePlot',\n        description: 'Aggregate plot should not use raw continuous field as group by values. ' +\n            '(Quantitative should be binned. Temporal should have time unit.)',\n        properties: [property_1.Property.AGGREGATE, property_1.Property.TIMEUNIT, property_1.Property.BIN, property_1.Property.TYPE],\n        requireAllProperties: false,\n        strict: false,\n        satisfy: function (specQ, schema, stats, opt) {\n            if (specQ.isAggregate()) {\n                return util_1.every(specQ.getEncodings(), function (encQ) {\n                    if (encQ.type === type_1.Type.TEMPORAL) {\n                        return !!encQ.timeUnit;\n                    }\n                    if (encQ.type === type_1.Type.QUANTITATIVE) {\n                        return !!encQ.bin || !!encQ.aggregate;\n                    }\n                    return true;\n                });\n            }\n            return true;\n        }\n    },\n    {\n        name: 'omitRepeatedField',\n        description: 'Each field should be mapped to only one channel',\n        properties: [property_1.Property.FIELD],\n        requireAllProperties: false,\n        strict: false,\n        satisfy: function (specQ, schema, stats, opt) {\n            var usedField = {};\n            return util_1.every(specQ.getEncodings(), function (encQ) {\n                if (encQ.field && !query_1.isEnumSpec(encQ.field)) {\n                    if (usedField[encQ.field]) {\n                        return false;\n                    }\n                    usedField[encQ.field] = true;\n                    return true;\n                }\n                return true;\n            });\n        }\n    },\n    {\n        name: 'omitVerticalDotPlot',\n        description: 'Do not output vertical dot plot.',\n        properties: [property_1.Property.CHANNEL],\n        requireAllProperties: false,\n        strict: false,\n        satisfy: function (specQ, schema, stats, opt) {\n            var encodings = specQ.getEncodings();\n            if (encodings.length === 1 && encodings[0].channel === channel_1.Channel.Y) {\n                return false;\n            }\n            return true;\n        }\n    },\n    {\n        name: 'preferredBinAxis',\n        description: 'Always use preferred axis for a binned field.',\n        properties: [property_1.Property.CHANNEL, property_1.Property.BIN],\n        requireAllProperties: true,\n        strict: false,\n        satisfy: function (specQ, schema, stats, opt) {\n            var xEncQ = specQ.getEncodingQueryByChannel(channel_1.Channel.X);\n            var yEncQ = specQ.getEncodingQueryByChannel(channel_1.Channel.Y);\n            var xBin = xEncQ && !!xEncQ.bin;\n            var yBin = yEncQ && !!yEncQ.bin;\n            return (xBin && yBin) ||\n                (!xBin && !yBin) ||\n                (xBin && opt.preferredBinAxis === channel_1.Channel.X) ||\n                (yBin && opt.preferredBinAxis === channel_1.Channel.Y);\n        }\n    },\n    {\n        name: 'preferredTemporalAxis',\n        description: 'Always use preferred axis for a time field.',\n        properties: [property_1.Property.CHANNEL, property_1.Property.TYPE],\n        requireAllProperties: true,\n        strict: false,\n        satisfy: satisfyPreferredType(type_1.Type.TEMPORAL, 'preferredTemporalAxis')\n    },\n    {\n        name: 'preferredOrdinalAxis',\n        description: 'Always use preferred axis for an ordinal field.',\n        properties: [property_1.Property.CHANNEL, property_1.Property.TYPE],\n        requireAllProperties: true,\n        strict: false,\n        satisfy: satisfyPreferredType(type_1.Type.ORDINAL, 'preferredOrdinalAxis')\n    },\n    {\n        name: 'preferredNominalAxis',\n        description: 'Always use preferred axis for a nominal field.',\n        properties: [property_1.Property.CHANNEL, property_1.Property.TYPE],\n        requireAllProperties: true,\n        strict: false,\n        satisfy: satisfyPreferredType(type_1.Type.NOMINAL, 'preferredNominalAxis')\n    },\n    {\n        name: 'noRepeatedChannel',\n        description: 'Each encoding channel should only be used once.',\n        properties: [property_1.Property.CHANNEL],\n        requireAllProperties: false,\n        strict: true,\n        satisfy: function (specQ, schema, stats, opt) {\n            var usedChannel = {};\n            return util_1.every(specQ.getEncodings(), function (encQ) {\n                if (!query_1.isEnumSpec(encQ.channel)) {\n                    if (usedChannel[encQ.channel]) {\n                        return false;\n                    }\n                    usedChannel[encQ.channel] = true;\n                    return true;\n                }\n                return true;\n            });\n        }\n    }\n].map(function (sc) { return new SpecConstraintModel(sc); });\nexports.SPEC_CONSTRAINT_INDEX = exports.SPEC_CONSTRAINTS.reduce(function (m, c) {\n    m[c.name()] = c;\n    return m;\n}, {});\nexports.SPEC_CONSTRAINTS_BY_PROPERTY = exports.SPEC_CONSTRAINTS.reduce(function (m, c) {\n    c.properties().forEach(function (prop) {\n        m[prop] = m[prop] || [];\n        m[prop].push(c);\n    });\n    return m;\n}, {});\n//# sourceMappingURL=spec.js.map",
    "\"use strict\";\nexports.version = '0.0.1';\nvar cqlGenerate = require('./generate');\nvar cqlGroup = require('./group');\nvar cqlModel = require('./model');\nvar cqlProperty = require('./property');\nvar cqlQuery = require('./query');\nvar cqlSchema = require('./schema');\nvar cqlStats = require('./stats');\nvar cqlUtil = require('./util');\nexports.generate = cqlGenerate.generate;\nexports.group = cqlGroup;\nexports.model = cqlModel;\nexports.property = cqlProperty;\nexports.query = cqlQuery;\nexports.schema = cqlSchema;\nexports.stats = cqlStats;\nexports.util = cqlUtil;\n//# sourceMappingURL=cql.js.map",
    "\"use strict\";\nvar encoding_1 = require('./constraint/encoding');\nvar spec_1 = require('./constraint/spec');\nvar model_1 = require('./model');\nvar property_1 = require('./property');\nvar query_1 = require('./query');\nvar util_1 = require('./util');\nexports.ENUMERATOR_INDEX = {};\nfunction generate(specQuery, schema, stats, opt) {\n    if (opt === void 0) { opt = {}; }\n    opt = util_1.extend({}, query_1.DEFAULT_QUERY_CONFIG, opt);\n    var specModel = model_1.SpecQueryModel.build(specQuery, schema, opt);\n    var enumSpecIndex = specModel.enumSpecIndex;\n    var answerSet = [specModel];\n    opt.propertyPrecedence.forEach(function (prop) {\n        if (enumSpecIndex[prop]) {\n            var reducer = exports.ENUMERATOR_INDEX[prop](enumSpecIndex, schema, stats, opt);\n            answerSet = answerSet.reduce(reducer, []);\n        }\n    });\n    return answerSet;\n}\nexports.generate = generate;\nexports.ENUMERATOR_INDEX[property_1.Property.MARK] = function (enumSpecIndex, schema, stats, opt) {\n    return function (answerSet, specQ) {\n        var markEnumSpec = specQ.getMark();\n        markEnumSpec.enumValues.forEach(function (mark) {\n            specQ.setMark(mark);\n            var specConstraints = spec_1.SPEC_CONSTRAINTS_BY_PROPERTY[property_1.Property.MARK] || [];\n            var satisfySpecConstraints = util_1.every(specConstraints, function (c) {\n                if (c.strict() || !!opt[c.name()]) {\n                    var satisfy = c.satisfy(specQ, schema, stats, opt);\n                    if (!satisfy && opt.verbose) {\n                        console.log(c.name() + ' failed with ' + specQ.toShorthand() + ' for mark');\n                    }\n                    return satisfy;\n                }\n                return true;\n            });\n            if (satisfySpecConstraints) {\n                answerSet.push(specQ.duplicate());\n            }\n        });\n        specQ.resetMark();\n        return answerSet;\n    };\n};\nproperty_1.ENCODING_PROPERTIES.forEach(function (prop) {\n    exports.ENUMERATOR_INDEX[prop] = EncodingPropertyGeneratorFactory(prop);\n});\nfunction EncodingPropertyGeneratorFactory(prop) {\n    return function (enumSpecIndex, schema, stats, opt) {\n        return function (answerSet, specQ) {\n            var indexTuples = enumSpecIndex[prop];\n            function enumerate(jobIndex) {\n                if (jobIndex === indexTuples.length) {\n                    answerSet.push(specQ.duplicate());\n                    return;\n                }\n                var indexTuple = indexTuples[jobIndex];\n                var encQ = specQ.getEncodingQueryByIndex(indexTuple.index);\n                if (encQ.autoCount === false) {\n                    enumerate(jobIndex + 1);\n                }\n                else {\n                    var propEnumSpec = specQ.getEncodingProperty(indexTuple.index, prop);\n                    propEnumSpec.enumValues.forEach(function (propVal) {\n                        specQ.setEncodingProperty(indexTuple.index, prop, propVal, indexTuple.enumSpec);\n                        var encodingConstraints = encoding_1.ENCODING_CONSTRAINTS_BY_PROPERTY[prop] || [];\n                        var satisfyEncodingConstraints = util_1.every(encodingConstraints, function (c) {\n                            if (c.strict() || !!opt[c.name()]) {\n                                var satisfy = c.satisfy(specQ.getEncodingQueryByIndex(indexTuple.index), schema, stats, opt);\n                                if (!satisfy && opt.verbose) {\n                                    console.log(c.name() + ' failed with ' + specQ.toShorthand() + ' for ' + indexTuple.enumSpec.name);\n                                }\n                                return satisfy;\n                            }\n                            return true;\n                        });\n                        if (!satisfyEncodingConstraints) {\n                            return;\n                        }\n                        var specConstraints = spec_1.SPEC_CONSTRAINTS_BY_PROPERTY[prop] || [];\n                        var satisfySpecConstraints = util_1.every(specConstraints, function (c) {\n                            if (c.strict() || !!opt[c.name()]) {\n                                var satisfy = c.satisfy(specQ, schema, stats, opt);\n                                if (!satisfy && opt.verbose) {\n                                    console.log(c.name() + ' failed with ' + specQ.toShorthand() + ' for ' + indexTuple.enumSpec.name);\n                                }\n                                return satisfy;\n                            }\n                            return true;\n                        });\n                        if (!satisfySpecConstraints) {\n                            return;\n                        }\n                        enumerate(jobIndex + 1);\n                    });\n                    specQ.resetEncodingProperty(indexTuple.index, prop, indexTuple.enumSpec);\n                }\n            }\n            enumerate(0);\n            return answerSet;\n        };\n    };\n}\nexports.EncodingPropertyGeneratorFactory = EncodingPropertyGeneratorFactory;\n//# sourceMappingURL=generate.js.map",
    "\"use strict\";\nvar channel_1 = require('vega-lite/src/channel');\nvar query_1 = require('./query');\nfunction group(specQueries, keyFn) {\n    return specQueries.reduce(function (groups, specQ) {\n        var name = keyFn(specQ);\n        groups[name] = groups[name] || [];\n        groups[name].push(specQ);\n        return groups;\n    }, {});\n}\nexports.group = group;\nfunction dataKey(specQ) {\n    return specQ.getEncodings().map(query_1.stringifyEncodingQueryFieldDef)\n        .sort()\n        .join('|');\n}\nexports.dataKey = dataKey;\nfunction channelType(channel) {\n    if (query_1.isEnumSpec(channel)) {\n        return query_1.SHORT_ENUM_SPEC + '';\n    }\n    var c = channel;\n    switch (c) {\n        case channel_1.Channel.X:\n        case channel_1.Channel.Y:\n            return 'xy';\n        case channel_1.Channel.ROW:\n        case channel_1.Channel.COLUMN:\n            return 'facet';\n        case channel_1.Channel.COLOR:\n        case channel_1.Channel.SIZE:\n        case channel_1.Channel.SHAPE:\n        case channel_1.Channel.OPACITY:\n            return 'non-xy';\n        case channel_1.Channel.TEXT:\n        case channel_1.Channel.DETAIL:\n        case channel_1.Channel.PATH:\n        case channel_1.Channel.ORDER:\n            return c + '';\n    }\n    console.warn('channel type not implemented for ' + c);\n    return c + '';\n}\nfunction encodingKey(specQ) {\n    return specQ.getEncodings().map(function (encQ) {\n        var fieldDef = query_1.stringifyEncodingQueryFieldDef(encQ);\n        return channelType(encQ.channel) + ':' + fieldDef;\n    })\n        .sort()\n        .join('|');\n}\nexports.encodingKey = encodingKey;\n//# sourceMappingURL=group.js.map",
    "\"use strict\";\nvar aggregate_1 = require('vega-lite/src/aggregate');\nvar type_1 = require('vega-lite/src/type');\nvar property_1 = require('./property');\nvar query_1 = require('./query');\nvar util_1 = require('./util');\nfunction getDefaultName(prop) {\n    switch (prop) {\n        case property_1.Property.MARK:\n            return 'm';\n        case property_1.Property.CHANNEL:\n            return 'c';\n        case property_1.Property.AGGREGATE:\n            return 'a';\n        case property_1.Property.AUTOCOUNT:\n            return '#';\n        case property_1.Property.BIN:\n            return 'b';\n        case property_1.Property.TIMEUNIT:\n            return 'tu';\n        case property_1.Property.FIELD:\n            return 'f';\n        case property_1.Property.TYPE:\n            return 't';\n    }\n    throw new Error('Default name undefined');\n}\nfunction getDefaultEnumValues(prop, schema, opt) {\n    switch (prop) {\n        case property_1.Property.FIELD:\n            return schema.fields();\n        case property_1.Property.BIN:\n        case property_1.Property.AUTOCOUNT:\n            return [false, true];\n        case property_1.Property.MARK:\n        case property_1.Property.CHANNEL:\n        case property_1.Property.AGGREGATE:\n        case property_1.Property.TIMEUNIT:\n        case property_1.Property.TYPE:\n            return opt[prop + 's'] || [];\n    }\n    throw new Error('No default enumValues for ' + prop);\n}\nexports.getDefaultEnumValues = getDefaultEnumValues;\nvar SpecQueryModel = (function () {\n    function SpecQueryModel(spec, enumSpecIndex, schema, enumSpecAssignment) {\n        if (enumSpecAssignment === void 0) { enumSpecAssignment = {}; }\n        this._spec = spec;\n        this._encodingMap = spec.encodings.reduce(function (m, encQ) {\n            if (!query_1.isEnumSpec(encQ.channel)) {\n                m[encQ.channel] = encQ;\n            }\n            return m;\n        }, {});\n        this._enumSpecIndex = enumSpecIndex;\n        this._enumSpecAssignment = enumSpecAssignment;\n        this._schema = schema;\n    }\n    SpecQueryModel.build = function (specQ, schema, opt) {\n        specQ = util_1.duplicate(specQ);\n        var enumSpecIndex = {};\n        if (query_1.isEnumSpec(specQ.mark)) {\n            var name_1 = getDefaultName(property_1.Property.MARK);\n            specQ.mark = query_1.initEnumSpec(specQ.mark, name_1, opt.marks);\n            enumSpecIndex.mark = { enumSpec: specQ.mark };\n        }\n        specQ.encodings.forEach(function (encQ, index) {\n            if (encQ.autoCount !== undefined) {\n                console.warn('A field with autoCount should not be included as autoCount meant to be an internal object.');\n                encQ.type = type_1.Type.QUANTITATIVE;\n            }\n            if (encQ.type === undefined) {\n                encQ.type = query_1.SHORT_ENUM_SPEC;\n            }\n            property_1.ENCODING_PROPERTIES.forEach(function (prop) {\n                if (query_1.isEnumSpec(encQ[prop])) {\n                    var defaultEnumSpecName = getDefaultName(prop) + index;\n                    var defaultEnumValues = getDefaultEnumValues(prop, schema, opt);\n                    encQ[prop] = query_1.initEnumSpec(encQ[prop], defaultEnumSpecName, defaultEnumValues);\n                    (enumSpecIndex[prop] = enumSpecIndex[prop] || []).push({\n                        enumSpec: encQ[prop],\n                        index: index\n                    });\n                }\n            });\n        });\n        if (opt.autoAddCount) {\n            var countEncQ_1 = {\n                channel: {\n                    name: getDefaultName(property_1.Property.CHANNEL) + specQ.encodings.length,\n                    enumValues: getDefaultEnumValues(property_1.Property.CHANNEL, schema, opt)\n                },\n                autoCount: {\n                    name: getDefaultName(property_1.Property.AUTOCOUNT) + specQ.encodings.length,\n                    enumValues: [false, true]\n                },\n                type: type_1.Type.QUANTITATIVE\n            };\n            specQ.encodings.push(countEncQ_1);\n            var index_1 = specQ.encodings.length - 1;\n            [property_1.Property.CHANNEL, property_1.Property.AUTOCOUNT].forEach(function (prop) {\n                (enumSpecIndex[prop] = enumSpecIndex[prop] || []).push({\n                    enumSpec: countEncQ_1[prop],\n                    index: index_1\n                });\n            });\n        }\n        return new SpecQueryModel(specQ, enumSpecIndex, schema);\n    };\n    Object.defineProperty(SpecQueryModel.prototype, \"enumSpecIndex\", {\n        get: function () {\n            return this._enumSpecIndex;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SpecQueryModel.prototype, \"schema\", {\n        get: function () {\n            return this._schema;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SpecQueryModel.prototype, \"specQuery\", {\n        get: function () {\n            return this._spec;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    SpecQueryModel.prototype.duplicate = function () {\n        return new SpecQueryModel(util_1.duplicate(this._spec), this._enumSpecIndex, this._schema, util_1.duplicate(this._enumSpecAssignment));\n    };\n    SpecQueryModel.prototype.setMark = function (mark) {\n        var name = this._spec.mark.name;\n        this._enumSpecAssignment[name] = this._spec.mark = mark;\n    };\n    SpecQueryModel.prototype.resetMark = function () {\n        var enumSpec = this._spec.mark = this._enumSpecIndex.mark.enumSpec;\n        delete this._enumSpecAssignment[enumSpec.name];\n    };\n    SpecQueryModel.prototype.getMark = function () {\n        return this._spec.mark;\n    };\n    SpecQueryModel.prototype.getEncodingProperty = function (index, prop) {\n        return this._spec.encodings[index][prop];\n    };\n    SpecQueryModel.prototype.setEncodingProperty = function (index, prop, value, enumSpec) {\n        var encQ = this._spec.encodings[index];\n        if (prop === property_1.Property.CHANNEL && encQ.channel && !query_1.isEnumSpec(encQ.channel)) {\n            delete this._encodingMap[encQ.channel];\n        }\n        encQ[prop] = value;\n        this._enumSpecAssignment[enumSpec.name] = value;\n        if (prop === property_1.Property.CHANNEL) {\n            this._encodingMap[value] = encQ;\n        }\n    };\n    SpecQueryModel.prototype.resetEncodingProperty = function (index, prop, enumSpec) {\n        var encQ = this._spec.encodings[index];\n        if (prop === property_1.Property.CHANNEL) {\n            delete this._encodingMap[encQ.channel];\n        }\n        encQ[prop] = enumSpec;\n        delete this._enumSpecAssignment[enumSpec.name];\n    };\n    SpecQueryModel.prototype.channelUsed = function (channel) {\n        return !!this._encodingMap[channel];\n    };\n    SpecQueryModel.prototype.getEncodings = function () {\n        return this._spec.encodings;\n    };\n    SpecQueryModel.prototype.getEncodingQueryByChannel = function (channel) {\n        return this._encodingMap[channel];\n    };\n    SpecQueryModel.prototype.getEncodingQueryByIndex = function (i) {\n        return this._spec.encodings[i];\n    };\n    SpecQueryModel.prototype.isDimension = function (channel) {\n        var encQ = this._encodingMap[channel];\n        return encQ && query_1.isDimension(encQ);\n    };\n    SpecQueryModel.prototype.isMeasure = function (channel) {\n        var encQ = this._encodingMap[channel];\n        return encQ && query_1.isMeasure(encQ);\n    };\n    SpecQueryModel.prototype.isAggregate = function () {\n        return util_1.some(this._spec.encodings, function (encQ) {\n            return (!query_1.isEnumSpec(encQ.aggregate) && !!encQ.aggregate) || encQ.autoCount === true;\n        });\n    };\n    SpecQueryModel.prototype.toShorthand = function () {\n        return query_1.stringifySpecQuery(this._spec);\n    };\n    SpecQueryModel.prototype.toSpec = function (data) {\n        if (query_1.isEnumSpec(this._spec.mark))\n            return null;\n        var encoding = {};\n        for (var i = 0; i < this._spec.encodings.length; i++) {\n            var encQ = this._spec.encodings[i];\n            if (query_1.isEnumSpec(encQ.channel))\n                return null;\n            var fieldDef = {};\n            var PROPERTIES = [property_1.Property.AGGREGATE, property_1.Property.BIN, property_1.Property.TIMEUNIT, property_1.Property.FIELD, property_1.Property.TYPE];\n            for (var j = 0; j < PROPERTIES.length; j++) {\n                var prop = PROPERTIES[j];\n                if (query_1.isEnumSpec(encQ[prop]))\n                    return null;\n                if (encQ[prop] !== undefined) {\n                    fieldDef[prop] = encQ[prop];\n                }\n            }\n            if (encQ.autoCount === true) {\n                fieldDef.aggregate = aggregate_1.AggregateOp.COUNT;\n                fieldDef.field = '*';\n                fieldDef.type = type_1.Type.QUANTITATIVE;\n            }\n            else if (encQ.autoCount === false) {\n                continue;\n            }\n            encoding[encQ.channel] = fieldDef;\n        }\n        return util_1.extend(data ? { data: data } : {}, {\n            mark: this._spec.mark,\n            encoding: encoding\n        });\n    };\n    return SpecQueryModel;\n}());\nexports.SpecQueryModel = SpecQueryModel;\n//# sourceMappingURL=model.js.map",
    "\"use strict\";\n(function (Property) {\n    Property[Property[\"MARK\"] = 'mark'] = \"MARK\";\n    Property[Property[\"CHANNEL\"] = 'channel'] = \"CHANNEL\";\n    Property[Property[\"AGGREGATE\"] = 'aggregate'] = \"AGGREGATE\";\n    Property[Property[\"AUTOCOUNT\"] = 'autoCount'] = \"AUTOCOUNT\";\n    Property[Property[\"BIN\"] = 'bin'] = \"BIN\";\n    Property[Property[\"TIMEUNIT\"] = 'timeUnit'] = \"TIMEUNIT\";\n    Property[Property[\"FIELD\"] = 'field'] = \"FIELD\";\n    Property[Property[\"TYPE\"] = 'type'] = \"TYPE\";\n})(exports.Property || (exports.Property = {}));\nvar Property = exports.Property;\nexports.ENCODING_PROPERTIES = [\n    Property.CHANNEL,\n    Property.BIN,\n    Property.TIMEUNIT,\n    Property.AGGREGATE,\n    Property.AUTOCOUNT,\n    Property.FIELD,\n    Property.TYPE\n];\n//# sourceMappingURL=property.js.map",
    "\"use strict\";\nvar channel_1 = require('vega-lite/src/channel');\nvar aggregate_1 = require('vega-lite/src/aggregate');\nvar mark_1 = require('vega-lite/src/mark');\nvar timeunit_1 = require('vega-lite/src/timeunit');\nvar Type_1 = require('vega-lite/src/Type');\nvar property_1 = require('./property');\nvar util_1 = require('./util');\nexports.DEFAULT_QUERY_CONFIG = {\n    verbose: false,\n    propertyPrecedence: [\n        property_1.Property.TYPE,\n        property_1.Property.FIELD,\n        property_1.Property.BIN,\n        property_1.Property.TIMEUNIT,\n        property_1.Property.AGGREGATE,\n        property_1.Property.AUTOCOUNT,\n        property_1.Property.CHANNEL,\n        property_1.Property.MARK\n    ],\n    marks: [mark_1.Mark.POINT, mark_1.Mark.BAR, mark_1.Mark.LINE, mark_1.Mark.AREA, mark_1.Mark.TICK],\n    channels: [channel_1.X, channel_1.Y, channel_1.ROW, channel_1.COLUMN, channel_1.SIZE, channel_1.COLOR],\n    aggregates: [undefined, aggregate_1.AggregateOp.MEAN],\n    timeUnits: [timeunit_1.TimeUnit.MONTH],\n    types: [Type_1.Type.NOMINAL, Type_1.Type.ORDINAL, Type_1.Type.QUANTITATIVE, Type_1.Type.TEMPORAL],\n    autoAddCount: false,\n    omitFacetOverPositionalChannels: true,\n    omitMultipleNonPositionalChannels: true,\n    omitRawBarLineArea: true,\n    omitRawContinuousFieldForAggregatePlot: true,\n    omitRepeatedField: true,\n    omitNonPositionalOverPositionalChannels: true,\n    omitVerticalDotPlot: true,\n    preferredBinAxis: channel_1.Channel.X,\n    preferredTemporalAxis: channel_1.Channel.X,\n    preferredOrdinalAxis: channel_1.Channel.Y,\n    preferredNominalAxis: channel_1.Channel.Y,\n    maxCardinalityForCategoricalColor: 20,\n    maxCardinalityForFacet: 10,\n    maxCardinalityForShape: 6,\n    typeMatchesSchemaType: true\n};\n(function (ShortEnumSpec) {\n    ShortEnumSpec[ShortEnumSpec[\"ENUMSPEC\"] = '?'] = \"ENUMSPEC\";\n})(exports.ShortEnumSpec || (exports.ShortEnumSpec = {}));\nvar ShortEnumSpec = exports.ShortEnumSpec;\nexports.SHORT_ENUM_SPEC = ShortEnumSpec.ENUMSPEC;\nfunction isEnumSpec(prop) {\n    return prop === exports.SHORT_ENUM_SPEC || (prop !== undefined && !!prop.enumValues);\n}\nexports.isEnumSpec = isEnumSpec;\nfunction initEnumSpec(prop, defaultName, defaultEnumValues) {\n    return {\n        name: prop.name || defaultName,\n        enumValues: prop.enumValues || defaultEnumValues\n    };\n}\nexports.initEnumSpec = initEnumSpec;\nfunction enumSpecShort(value) {\n    return (isEnumSpec(value) ? exports.SHORT_ENUM_SPEC : value) + '';\n}\nfunction stringifySpecQuery(specQ) {\n    var mark = enumSpecShort(specQ.mark);\n    var encodings = specQ.encodings.map(stringifyEncodingQuery)\n        .sort()\n        .join('|');\n    return mark + '|' +\n        encodings;\n}\nexports.stringifySpecQuery = stringifySpecQuery;\nfunction isDimension(encQ) {\n    return util_1.isin(encQ.type, [Type_1.Type.NOMINAL, Type_1.Type.ORDINAL]) ||\n        (!isEnumSpec(encQ.bin) && !!encQ.bin) ||\n        (!isEnumSpec(encQ.timeUnit) && !!encQ.timeUnit);\n}\nexports.isDimension = isDimension;\nfunction isMeasure(encQ) {\n    return (encQ.type === Type_1.Type.QUANTITATIVE && !encQ.bin) ||\n        (encQ.type === Type_1.Type.TEMPORAL && !encQ.timeUnit);\n}\nexports.isMeasure = isMeasure;\nfunction stringifyEncodingQuery(encQ) {\n    return enumSpecShort(encQ.channel) + ':' + stringifyEncodingQueryFieldDef(encQ);\n}\nexports.stringifyEncodingQuery = stringifyEncodingQuery;\nfunction stringifyEncodingQueryFieldDef(encQ) {\n    var fn = null;\n    if (encQ.aggregate && !isEnumSpec(encQ.aggregate)) {\n        fn = encQ.aggregate;\n    }\n    else if (encQ.timeUnit && !isEnumSpec(encQ.timeUnit)) {\n        fn = encQ.timeUnit;\n    }\n    else if (encQ.bin && !isEnumSpec(encQ.bin)) {\n        fn = 'bin';\n    }\n    else if (encQ.autoCount && !isEnumSpec(encQ.autoCount)) {\n        fn = 'count';\n    }\n    else if ((encQ.aggregate && isEnumSpec(encQ.aggregate)) ||\n        (encQ.autoCount && isEnumSpec(encQ.autoCount)) ||\n        (encQ.timeUnit && isEnumSpec(encQ.timeUnit)) ||\n        (encQ.bin && isEnumSpec(encQ.bin))) {\n        fn = exports.SHORT_ENUM_SPEC + '';\n    }\n    var fieldType = enumSpecShort(encQ.field || '*') + ',' + enumSpecShort(encQ.type || Type_1.Type.QUANTITATIVE).substr(0, 1);\n    return (fn ? fn + '(' + fieldType + ')' : fieldType);\n}\nexports.stringifyEncodingQueryFieldDef = stringifyEncodingQueryFieldDef;\n//# sourceMappingURL=query.js.map",
    "\"use strict\";\nvar Schema = (function () {\n    function Schema(fieldSchemas) {\n        this.fieldSchemas = fieldSchemas;\n        this.fieldSchemaIndex = fieldSchemas.reduce(function (m, fieldSchema) {\n            m[fieldSchema.field] = fieldSchema;\n            return m;\n        }, {});\n    }\n    Schema.prototype.fields = function () {\n        return this.fieldSchemas.map(function (fieldSchema) { return fieldSchema.field; });\n    };\n    Schema.prototype.primitiveType = function (field) {\n        return this.fieldSchemaIndex[field] ? this.fieldSchemaIndex[field].primitiveType : null;\n    };\n    Schema.prototype.type = function (field) {\n        return this.fieldSchemaIndex[field] ? this.fieldSchemaIndex[field].type : null;\n    };\n    return Schema;\n}());\nexports.Schema = Schema;\n(function (PrimitiveType) {\n    PrimitiveType[PrimitiveType[\"STRING\"] = 'string'] = \"STRING\";\n    PrimitiveType[PrimitiveType[\"NUMBER\"] = 'number'] = \"NUMBER\";\n    PrimitiveType[PrimitiveType[\"INTEGER\"] = 'integer'] = \"INTEGER\";\n    PrimitiveType[PrimitiveType[\"BOOLEAN\"] = 'boolean'] = \"BOOLEAN\";\n    PrimitiveType[PrimitiveType[\"DATE\"] = 'date'] = \"DATE\";\n})(exports.PrimitiveType || (exports.PrimitiveType = {}));\nvar PrimitiveType = exports.PrimitiveType;\n//# sourceMappingURL=schema.js.map",
    "\"use strict\";\nvar Stats = (function () {\n    function Stats(fieldsStats) {\n        this._fieldsStats = fieldsStats;\n        this._fieldStatsIndex = fieldsStats.reduce(function (m, fieldStats) {\n            m[fieldStats.field] = fieldStats;\n            return m;\n        }, {});\n    }\n    Stats.prototype.cardinality = function (encQ) {\n        if (encQ.aggregate || encQ.autoCount) {\n            return 1;\n        }\n        else if (encQ.bin) {\n            return 1;\n        }\n        else if (encQ.timeUnit) {\n            return 1;\n        }\n        return this._fieldStatsIndex[encQ.field].distinct;\n    };\n    return Stats;\n}());\nexports.Stats = Stats;\n//# sourceMappingURL=stats.js.map",
    "\"use strict\";\nfunction isin(item, array) {\n    return array.indexOf(item) !== -1;\n}\nexports.isin = isin;\n;\nfunction keys(obj) {\n    var k = [], x;\n    for (x in obj) {\n        k.push(x);\n    }\n    return k;\n}\nexports.keys = keys;\n;\nfunction duplicate(obj) {\n    return JSON.parse(JSON.stringify(obj));\n}\nexports.duplicate = duplicate;\n;\nfunction every(arr, f) {\n    var i = 0, k;\n    for (k in arr) {\n        if (!f(arr[k], k, i++)) {\n            return false;\n        }\n    }\n    return true;\n}\nexports.every = every;\n;\nfunction some(arr, f) {\n    var i = 0, k;\n    for (k in arr) {\n        if (f(arr[k], k, i++)) {\n            return true;\n        }\n    }\n    return false;\n}\nexports.some = some;\n;\nfunction extend(obj, b) {\n    var rest = [];\n    for (var _i = 2; _i < arguments.length; _i++) {\n        rest[_i - 2] = arguments[_i];\n    }\n    for (var x, name, i = 1, len = arguments.length; i < len; ++i) {\n        x = arguments[i];\n        for (name in x) {\n            obj[name] = x[name];\n        }\n    }\n    return obj;\n}\nexports.extend = extend;\n;\n//# sourceMappingURL=util.js.map",
    "(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define('d3-time', ['exports'], factory) :\n  factory((global.d3_time = {}));\n}(this, function (exports) { 'use strict';\n\n  var t0 = new Date;\n  var t1 = new Date;\n  function newInterval(floori, offseti, count, field) {\n\n    function interval(date) {\n      return floori(date = new Date(+date)), date;\n    }\n\n    interval.floor = interval;\n\n    interval.round = function(date) {\n      var d0 = new Date(+date),\n          d1 = new Date(date - 1);\n      floori(d0), floori(d1), offseti(d1, 1);\n      return date - d0 < d1 - date ? d0 : d1;\n    };\n\n    interval.ceil = function(date) {\n      return floori(date = new Date(date - 1)), offseti(date, 1), date;\n    };\n\n    interval.offset = function(date, step) {\n      return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n    };\n\n    interval.range = function(start, stop, step) {\n      var range = [];\n      start = new Date(start - 1);\n      stop = new Date(+stop);\n      step = step == null ? 1 : Math.floor(step);\n      if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n      offseti(start, 1), floori(start);\n      if (start < stop) range.push(new Date(+start));\n      while (offseti(start, step), floori(start), start < stop) range.push(new Date(+start));\n      return range;\n    };\n\n    interval.filter = function(test) {\n      return newInterval(function(date) {\n        while (floori(date), !test(date)) date.setTime(date - 1);\n      }, function(date, step) {\n        while (--step >= 0) while (offseti(date, 1), !test(date));\n      });\n    };\n\n    if (count) {\n      interval.count = function(start, end) {\n        t0.setTime(+start), t1.setTime(+end);\n        floori(t0), floori(t1);\n        return Math.floor(count(t0, t1));\n      };\n\n      interval.every = function(step) {\n        step = Math.floor(step);\n        return !isFinite(step) || !(step > 0) ? null\n            : !(step > 1) ? interval\n            : interval.filter(field\n                ? function(d) { return field(d) % step === 0; }\n                : function(d) { return interval.count(0, d) % step === 0; });\n      };\n    }\n\n    return interval;\n  };\n\n  var millisecond = newInterval(function() {\n    // noop\n  }, function(date, step) {\n    date.setTime(+date + step);\n  }, function(start, end) {\n    return end - start;\n  });\n\n  // An optimized implementation for this simple case.\n  millisecond.every = function(k) {\n    k = Math.floor(k);\n    if (!isFinite(k) || !(k > 0)) return null;\n    if (!(k > 1)) return millisecond;\n    return newInterval(function(date) {\n      date.setTime(Math.floor(date / k) * k);\n    }, function(date, step) {\n      date.setTime(+date + step * k);\n    }, function(start, end) {\n      return (end - start) / k;\n    });\n  };\n\n  var second = newInterval(function(date) {\n    date.setMilliseconds(0);\n  }, function(date, step) {\n    date.setTime(+date + step * 1e3);\n  }, function(start, end) {\n    return (end - start) / 1e3;\n  }, function(date) {\n    return date.getSeconds();\n  });\n\n  var minute = newInterval(function(date) {\n    date.setSeconds(0, 0);\n  }, function(date, step) {\n    date.setTime(+date + step * 6e4);\n  }, function(start, end) {\n    return (end - start) / 6e4;\n  }, function(date) {\n    return date.getMinutes();\n  });\n\n  var hour = newInterval(function(date) {\n    date.setMinutes(0, 0, 0);\n  }, function(date, step) {\n    date.setTime(+date + step * 36e5);\n  }, function(start, end) {\n    return (end - start) / 36e5;\n  }, function(date) {\n    return date.getHours();\n  });\n\n  var day = newInterval(function(date) {\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setDate(date.getDate() + step);\n  }, function(start, end) {\n    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * 6e4) / 864e5;\n  }, function(date) {\n    return date.getDate() - 1;\n  });\n\n  function weekday(i) {\n    return newInterval(function(date) {\n      date.setHours(0, 0, 0, 0);\n      date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n    }, function(date, step) {\n      date.setDate(date.getDate() + step * 7);\n    }, function(start, end) {\n      return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * 6e4) / 6048e5;\n    });\n  }\n\n  var sunday = weekday(0);\n  var monday = weekday(1);\n  var tuesday = weekday(2);\n  var wednesday = weekday(3);\n  var thursday = weekday(4);\n  var friday = weekday(5);\n  var saturday = weekday(6);\n\n  var month = newInterval(function(date) {\n    date.setHours(0, 0, 0, 0);\n    date.setDate(1);\n  }, function(date, step) {\n    date.setMonth(date.getMonth() + step);\n  }, function(start, end) {\n    return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n  }, function(date) {\n    return date.getMonth();\n  });\n\n  var year = newInterval(function(date) {\n    date.setHours(0, 0, 0, 0);\n    date.setMonth(0, 1);\n  }, function(date, step) {\n    date.setFullYear(date.getFullYear() + step);\n  }, function(start, end) {\n    return end.getFullYear() - start.getFullYear();\n  }, function(date) {\n    return date.getFullYear();\n  });\n\n  var utcSecond = newInterval(function(date) {\n    date.setUTCMilliseconds(0);\n  }, function(date, step) {\n    date.setTime(+date + step * 1e3);\n  }, function(start, end) {\n    return (end - start) / 1e3;\n  }, function(date) {\n    return date.getUTCSeconds();\n  });\n\n  var utcMinute = newInterval(function(date) {\n    date.setUTCSeconds(0, 0);\n  }, function(date, step) {\n    date.setTime(+date + step * 6e4);\n  }, function(start, end) {\n    return (end - start) / 6e4;\n  }, function(date) {\n    return date.getUTCMinutes();\n  });\n\n  var utcHour = newInterval(function(date) {\n    date.setUTCMinutes(0, 0, 0);\n  }, function(date, step) {\n    date.setTime(+date + step * 36e5);\n  }, function(start, end) {\n    return (end - start) / 36e5;\n  }, function(date) {\n    return date.getUTCHours();\n  });\n\n  var utcDay = newInterval(function(date) {\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCDate(date.getUTCDate() + step);\n  }, function(start, end) {\n    return (end - start) / 864e5;\n  }, function(date) {\n    return date.getUTCDate() - 1;\n  });\n\n  function utcWeekday(i) {\n    return newInterval(function(date) {\n      date.setUTCHours(0, 0, 0, 0);\n      date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n    }, function(date, step) {\n      date.setUTCDate(date.getUTCDate() + step * 7);\n    }, function(start, end) {\n      return (end - start) / 6048e5;\n    });\n  }\n\n  var utcSunday = utcWeekday(0);\n  var utcMonday = utcWeekday(1);\n  var utcTuesday = utcWeekday(2);\n  var utcWednesday = utcWeekday(3);\n  var utcThursday = utcWeekday(4);\n  var utcFriday = utcWeekday(5);\n  var utcSaturday = utcWeekday(6);\n\n  var utcMonth = newInterval(function(date) {\n    date.setUTCHours(0, 0, 0, 0);\n    date.setUTCDate(1);\n  }, function(date, step) {\n    date.setUTCMonth(date.getUTCMonth() + step);\n  }, function(start, end) {\n    return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n  }, function(date) {\n    return date.getUTCMonth();\n  });\n\n  var utcYear = newInterval(function(date) {\n    date.setUTCHours(0, 0, 0, 0);\n    date.setUTCMonth(0, 1);\n  }, function(date, step) {\n    date.setUTCFullYear(date.getUTCFullYear() + step);\n  }, function(start, end) {\n    return end.getUTCFullYear() - start.getUTCFullYear();\n  }, function(date) {\n    return date.getUTCFullYear();\n  });\n\n  var milliseconds = millisecond.range;\n  var seconds = second.range;\n  var minutes = minute.range;\n  var hours = hour.range;\n  var days = day.range;\n  var sundays = sunday.range;\n  var mondays = monday.range;\n  var tuesdays = tuesday.range;\n  var wednesdays = wednesday.range;\n  var thursdays = thursday.range;\n  var fridays = friday.range;\n  var saturdays = saturday.range;\n  var weeks = sunday.range;\n  var months = month.range;\n  var years = year.range;\n\n  var utcMillisecond = millisecond;\n  var utcMilliseconds = milliseconds;\n  var utcSeconds = utcSecond.range;\n  var utcMinutes = utcMinute.range;\n  var utcHours = utcHour.range;\n  var utcDays = utcDay.range;\n  var utcSundays = utcSunday.range;\n  var utcMondays = utcMonday.range;\n  var utcTuesdays = utcTuesday.range;\n  var utcWednesdays = utcWednesday.range;\n  var utcThursdays = utcThursday.range;\n  var utcFridays = utcFriday.range;\n  var utcSaturdays = utcSaturday.range;\n  var utcWeeks = utcSunday.range;\n  var utcMonths = utcMonth.range;\n  var utcYears = utcYear.range;\n\n  var version = \"0.1.1\";\n\n  exports.version = version;\n  exports.milliseconds = milliseconds;\n  exports.seconds = seconds;\n  exports.minutes = minutes;\n  exports.hours = hours;\n  exports.days = days;\n  exports.sundays = sundays;\n  exports.mondays = mondays;\n  exports.tuesdays = tuesdays;\n  exports.wednesdays = wednesdays;\n  exports.thursdays = thursdays;\n  exports.fridays = fridays;\n  exports.saturdays = saturdays;\n  exports.weeks = weeks;\n  exports.months = months;\n  exports.years = years;\n  exports.utcMillisecond = utcMillisecond;\n  exports.utcMilliseconds = utcMilliseconds;\n  exports.utcSeconds = utcSeconds;\n  exports.utcMinutes = utcMinutes;\n  exports.utcHours = utcHours;\n  exports.utcDays = utcDays;\n  exports.utcSundays = utcSundays;\n  exports.utcMondays = utcMondays;\n  exports.utcTuesdays = utcTuesdays;\n  exports.utcWednesdays = utcWednesdays;\n  exports.utcThursdays = utcThursdays;\n  exports.utcFridays = utcFridays;\n  exports.utcSaturdays = utcSaturdays;\n  exports.utcWeeks = utcWeeks;\n  exports.utcMonths = utcMonths;\n  exports.utcYears = utcYears;\n  exports.millisecond = millisecond;\n  exports.second = second;\n  exports.minute = minute;\n  exports.hour = hour;\n  exports.day = day;\n  exports.sunday = sunday;\n  exports.monday = monday;\n  exports.tuesday = tuesday;\n  exports.wednesday = wednesday;\n  exports.thursday = thursday;\n  exports.friday = friday;\n  exports.saturday = saturday;\n  exports.week = sunday;\n  exports.month = month;\n  exports.year = year;\n  exports.utcSecond = utcSecond;\n  exports.utcMinute = utcMinute;\n  exports.utcHour = utcHour;\n  exports.utcDay = utcDay;\n  exports.utcSunday = utcSunday;\n  exports.utcMonday = utcMonday;\n  exports.utcTuesday = utcTuesday;\n  exports.utcWednesday = utcWednesday;\n  exports.utcThursday = utcThursday;\n  exports.utcFriday = utcFriday;\n  exports.utcSaturday = utcSaturday;\n  exports.utcWeek = utcSunday;\n  exports.utcMonth = utcMonth;\n  exports.utcYear = utcYear;\n  exports.interval = newInterval;\n\n}));",
    "var util = require('../util'),\n    time = require('../time'),\n    EPSILON = 1e-15;\n\nfunction bins(opt) {\n  if (!opt) { throw Error(\"Missing binning options.\"); }\n\n  // determine range\n  var maxb = opt.maxbins || 15,\n      base = opt.base || 10,\n      logb = Math.log(base),\n      div = opt.div || [5, 2],\n      min = opt.min,\n      max = opt.max,\n      span = max - min,\n      step, level, minstep, precision, v, i, eps;\n\n  if (opt.step) {\n    // if step size is explicitly given, use that\n    step = opt.step;\n  } else if (opt.steps) {\n    // if provided, limit choice to acceptable step sizes\n    step = opt.steps[Math.min(\n      opt.steps.length - 1,\n      bisect(opt.steps, span/maxb, 0, opt.steps.length)\n    )];\n  } else {\n    // else use span to determine step size\n    level = Math.ceil(Math.log(maxb) / logb);\n    minstep = opt.minstep || 0;\n    step = Math.max(\n      minstep,\n      Math.pow(base, Math.round(Math.log(span) / logb) - level)\n    );\n\n    // increase step size if too many bins\n    while (Math.ceil(span/step) > maxb) { step *= base; }\n\n    // decrease step size if allowed\n    for (i=0; i<div.length; ++i) {\n      v = step / div[i];\n      if (v >= minstep && span / v <= maxb) step = v;\n    }\n  }\n\n  // update precision, min and max\n  v = Math.log(step);\n  precision = v >= 0 ? 0 : ~~(-v / logb) + 1;\n  eps = Math.pow(base, -precision - 1);\n  min = Math.min(min, Math.floor(min / step + eps) * step);\n  max = Math.ceil(max / step) * step;\n\n  return {\n    start: min,\n    stop:  max,\n    step:  step,\n    unit:  {precision: precision},\n    value: value,\n    index: index\n  };\n}\n\nfunction bisect(a, x, lo, hi) {\n  while (lo < hi) {\n    var mid = lo + hi >>> 1;\n    if (util.cmp(a[mid], x) < 0) { lo = mid + 1; }\n    else { hi = mid; }\n  }\n  return lo;\n}\n\nfunction value(v) {\n  return this.step * Math.floor(v / this.step + EPSILON);\n}\n\nfunction index(v) {\n  return Math.floor((v - this.start) / this.step + EPSILON);\n}\n\nfunction date_value(v) {\n  return this.unit.date(value.call(this, v));\n}\n\nfunction date_index(v) {\n  return index.call(this, this.unit.unit(v));\n}\n\nbins.date = function(opt) {\n  if (!opt) { throw Error(\"Missing date binning options.\"); }\n\n  // find time step, then bin\n  var units = opt.utc ? time.utc : time,\n      dmin = opt.min,\n      dmax = opt.max,\n      maxb = opt.maxbins || 20,\n      minb = opt.minbins || 4,\n      span = (+dmax) - (+dmin),\n      unit = opt.unit ? units[opt.unit] : units.find(span, minb, maxb),\n      spec = bins({\n        min:     unit.min != null ? unit.min : unit.unit(dmin),\n        max:     unit.max != null ? unit.max : unit.unit(dmax),\n        maxbins: maxb,\n        minstep: unit.minstep,\n        steps:   unit.step\n      });\n\n  spec.unit = unit;\n  spec.index = date_index;\n  if (!opt.raw) spec.value = date_value;\n  return spec;\n};\n\nmodule.exports = bins;\n",
    "var util = require('./util'),\n    gen = module.exports;\n\ngen.repeat = function(val, n) {\n  var a = Array(n), i;\n  for (i=0; i<n; ++i) a[i] = val;\n  return a;\n};\n\ngen.zeros = function(n) {\n  return gen.repeat(0, n);\n};\n\ngen.range = function(start, stop, step) {\n  if (arguments.length < 3) {\n    step = 1;\n    if (arguments.length < 2) {\n      stop = start;\n      start = 0;\n    }\n  }\n  if ((stop - start) / step == Infinity) throw new Error('Infinite range');\n  var range = [], i = -1, j;\n  if (step < 0) while ((j = start + step * ++i) > stop) range.push(j);\n  else while ((j = start + step * ++i) < stop) range.push(j);\n  return range;\n};\n\ngen.random = {};\n\ngen.random.uniform = function(min, max) {\n  if (max === undefined) {\n    max = min === undefined ? 1 : min;\n    min = 0;\n  }\n  var d = max - min;\n  var f = function() {\n    return min + d * Math.random();\n  };\n  f.samples = function(n) {\n    return gen.zeros(n).map(f);\n  };\n  f.pdf = function(x) {\n    return (x >= min && x <= max) ? 1/d : 0;\n  };\n  f.cdf = function(x) {\n    return x < min ? 0 : x > max ? 1 : (x - min) / d;\n  };\n  f.icdf = function(p) {\n    return (p >= 0 && p <= 1) ? min + p*d : NaN;\n  };\n  return f;\n};\n\ngen.random.integer = function(a, b) {\n  if (b === undefined) {\n    b = a;\n    a = 0;\n  }\n  var d = b - a;\n  var f = function() {\n    return a + Math.floor(d * Math.random());\n  };\n  f.samples = function(n) {\n    return gen.zeros(n).map(f);\n  };\n  f.pdf = function(x) {\n    return (x === Math.floor(x) && x >= a && x < b) ? 1/d : 0;\n  };\n  f.cdf = function(x) {\n    var v = Math.floor(x);\n    return v < a ? 0 : v >= b ? 1 : (v - a + 1) / d;\n  };\n  f.icdf = function(p) {\n    return (p >= 0 && p <= 1) ? a - 1 + Math.floor(p*d) : NaN;\n  };\n  return f;\n};\n\ngen.random.normal = function(mean, stdev) {\n  mean = mean || 0;\n  stdev = stdev || 1;\n  var next;\n  var f = function() {\n    var x = 0, y = 0, rds, c;\n    if (next !== undefined) {\n      x = next;\n      next = undefined;\n      return x;\n    }\n    do {\n      x = Math.random()*2-1;\n      y = Math.random()*2-1;\n      rds = x*x + y*y;\n    } while (rds === 0 || rds > 1);\n    c = Math.sqrt(-2*Math.log(rds)/rds); // Box-Muller transform\n    next = mean + y*c*stdev;\n    return mean + x*c*stdev;\n  };\n  f.samples = function(n) {\n    return gen.zeros(n).map(f);\n  };\n  f.pdf = function(x) {\n    var exp = Math.exp(Math.pow(x-mean, 2) / (-2 * Math.pow(stdev, 2)));\n    return (1 / (stdev * Math.sqrt(2*Math.PI))) * exp;\n  };\n  f.cdf = function(x) {\n    // Approximation from West (2009)\n    // Better Approximations to Cumulative Normal Functions\n    var cd,\n        z = (x - mean) / stdev,\n        Z = Math.abs(z);\n    if (Z > 37) {\n      cd = 0;\n    } else {\n      var sum, exp = Math.exp(-Z*Z/2);\n      if (Z < 7.07106781186547) {\n        sum = 3.52624965998911e-02 * Z + 0.700383064443688;\n        sum = sum * Z + 6.37396220353165;\n        sum = sum * Z + 33.912866078383;\n        sum = sum * Z + 112.079291497871;\n        sum = sum * Z + 221.213596169931;\n        sum = sum * Z + 220.206867912376;\n        cd = exp * sum;\n        sum = 8.83883476483184e-02 * Z + 1.75566716318264;\n        sum = sum * Z + 16.064177579207;\n        sum = sum * Z + 86.7807322029461;\n        sum = sum * Z + 296.564248779674;\n        sum = sum * Z + 637.333633378831;\n        sum = sum * Z + 793.826512519948;\n        sum = sum * Z + 440.413735824752;\n        cd = cd / sum;\n      } else {\n        sum = Z + 0.65;\n        sum = Z + 4 / sum;\n        sum = Z + 3 / sum;\n        sum = Z + 2 / sum;\n        sum = Z + 1 / sum;\n        cd = exp / sum / 2.506628274631;\n      }\n    }\n    return z > 0 ? 1 - cd : cd;\n  };\n  f.icdf = function(p) {\n    // Approximation of Probit function using inverse error function.\n    if (p <= 0 || p >= 1) return NaN;\n    var x = 2*p - 1,\n        v = (8 * (Math.PI - 3)) / (3 * Math.PI * (4-Math.PI)),\n        a = (2 / (Math.PI*v)) + (Math.log(1 - Math.pow(x,2)) / 2),\n        b = Math.log(1 - (x*x)) / v,\n        s = (x > 0 ? 1 : -1) * Math.sqrt(Math.sqrt((a*a) - b) - a);\n    return mean + stdev * Math.SQRT2 * s;\n  };\n  return f;\n};\n\ngen.random.bootstrap = function(domain, smooth) {\n  // Generates a bootstrap sample from a set of observations.\n  // Smooth bootstrapping adds random zero-centered noise to the samples.\n  var val = domain.filter(util.isValid),\n      len = val.length,\n      err = smooth ? gen.random.normal(0, smooth) : null;\n  var f = function() {\n    return val[~~(Math.random()*len)] + (err ? err() : 0);\n  };\n  f.samples = function(n) {\n    return gen.zeros(n).map(f);\n  };\n  return f;\n};",
    "var d3_time = require('d3-time');\n\nvar tempDate = new Date(),\n    baseDate = new Date(0, 0, 1).setFullYear(0), // Jan 1, 0 AD\n    utcBaseDate = new Date(Date.UTC(0, 0, 1)).setUTCFullYear(0);\n\nfunction date(d) {\n  return (tempDate.setTime(+d), tempDate);\n}\n\n// create a time unit entry\nfunction entry(type, date, unit, step, min, max) {\n  var e = {\n    type: type,\n    date: date,\n    unit: unit\n  };\n  if (step) {\n    e.step = step;\n  } else {\n    e.minstep = 1;\n  }\n  if (min != null) e.min = min;\n  if (max != null) e.max = max;\n  return e;\n}\n\nfunction create(type, unit, base, step, min, max) {\n  return entry(type,\n    function(d) { return unit.offset(base, d); },\n    function(d) { return unit.count(base, d); },\n    step, min, max);\n}\n\nvar locale = [\n  create('second', d3_time.second, baseDate),\n  create('minute', d3_time.minute, baseDate),\n  create('hour',   d3_time.hour,   baseDate),\n  create('day',    d3_time.day,    baseDate, [1, 7]),\n  create('month',  d3_time.month,  baseDate, [1, 3, 6]),\n  create('year',   d3_time.year,   baseDate),\n\n  // periodic units\n  entry('seconds',\n    function(d) { return new Date(1970, 0, 1, 0, 0, d); },\n    function(d) { return date(d).getSeconds(); },\n    null, 0, 59\n  ),\n  entry('minutes',\n    function(d) { return new Date(1970, 0, 1, 0, d); },\n    function(d) { return date(d).getMinutes(); },\n    null, 0, 59\n  ),\n  entry('hours',\n    function(d) { return new Date(1970, 0, 1, d); },\n    function(d) { return date(d).getHours(); },\n    null, 0, 23\n  ),\n  entry('weekdays',\n    function(d) { return new Date(1970, 0, 4+d); },\n    function(d) { return date(d).getDay(); },\n    [1], 0, 6\n  ),\n  entry('dates',\n    function(d) { return new Date(1970, 0, d); },\n    function(d) { return date(d).getDate(); },\n    [1], 1, 31\n  ),\n  entry('months',\n    function(d) { return new Date(1970, d % 12, 1); },\n    function(d) { return date(d).getMonth(); },\n    [1], 0, 11\n  )\n];\n\nvar utc = [\n  create('second', d3_time.utcSecond, utcBaseDate),\n  create('minute', d3_time.utcMinute, utcBaseDate),\n  create('hour',   d3_time.utcHour,   utcBaseDate),\n  create('day',    d3_time.utcDay,    utcBaseDate, [1, 7]),\n  create('month',  d3_time.utcMonth,  utcBaseDate, [1, 3, 6]),\n  create('year',   d3_time.utcYear,   utcBaseDate),\n\n  // periodic units\n  entry('seconds',\n    function(d) { return new Date(Date.UTC(1970, 0, 1, 0, 0, d)); },\n    function(d) { return date(d).getUTCSeconds(); },\n    null, 0, 59\n  ),\n  entry('minutes',\n    function(d) { return new Date(Date.UTC(1970, 0, 1, 0, d)); },\n    function(d) { return date(d).getUTCMinutes(); },\n    null, 0, 59\n  ),\n  entry('hours',\n    function(d) { return new Date(Date.UTC(1970, 0, 1, d)); },\n    function(d) { return date(d).getUTCHours(); },\n    null, 0, 23\n  ),\n  entry('weekdays',\n    function(d) { return new Date(Date.UTC(1970, 0, 4+d)); },\n    function(d) { return date(d).getUTCDay(); },\n    [1], 0, 6\n  ),\n  entry('dates',\n    function(d) { return new Date(Date.UTC(1970, 0, d)); },\n    function(d) { return date(d).getUTCDate(); },\n    [1], 1, 31\n  ),\n  entry('months',\n    function(d) { return new Date(Date.UTC(1970, d % 12, 1)); },\n    function(d) { return date(d).getUTCMonth(); },\n    [1], 0, 11\n  )\n];\n\nvar STEPS = [\n  [31536e6, 5],  // 1-year\n  [7776e6, 4],   // 3-month\n  [2592e6, 4],   // 1-month\n  [12096e5, 3],  // 2-week\n  [6048e5, 3],   // 1-week\n  [1728e5, 3],   // 2-day\n  [864e5, 3],    // 1-day\n  [432e5, 2],    // 12-hour\n  [216e5, 2],    // 6-hour\n  [108e5, 2],    // 3-hour\n  [36e5, 2],     // 1-hour\n  [18e5, 1],     // 30-minute\n  [9e5, 1],      // 15-minute\n  [3e5, 1],      // 5-minute\n  [6e4, 1],      // 1-minute\n  [3e4, 0],      // 30-second\n  [15e3, 0],     // 15-second\n  [5e3, 0],      // 5-second\n  [1e3, 0]       // 1-second\n];\n\nfunction find(units, span, minb, maxb) {\n  var step = STEPS[0], i, n, bins;\n\n  for (i=1, n=STEPS.length; i<n; ++i) {\n    step = STEPS[i];\n    if (span > step[0]) {\n      bins = span / step[0];\n      if (bins > maxb) {\n        return units[STEPS[i-1][1]];\n      }\n      if (bins >= minb) {\n        return units[step[1]];\n      }\n    }\n  }\n  return units[STEPS[n-1][1]];\n}\n\nfunction toUnitMap(units) {\n  var map = {}, i, n;\n  for (i=0, n=units.length; i<n; ++i) {\n    map[units[i].type] = units[i];\n  }\n  map.find = function(span, minb, maxb) {\n    return find(units, span, minb, maxb);\n  };\n  return map;\n}\n\nmodule.exports = toUnitMap(locale);\nmodule.exports.utc = toUnitMap(utc);",
    "var u = module.exports;\n\n// utility functions\n\nvar FNAME = '__name__';\n\nu.namedfunc = function(name, f) { return (f[FNAME] = name, f); };\n\nu.name = function(f) { return f==null ? null : f[FNAME]; };\n\nu.identity = function(x) { return x; };\n\nu.true = u.namedfunc('true', function() { return true; });\n\nu.false = u.namedfunc('false', function() { return false; });\n\nu.duplicate = function(obj) {\n  return JSON.parse(JSON.stringify(obj));\n};\n\nu.equal = function(a, b) {\n  return JSON.stringify(a) === JSON.stringify(b);\n};\n\nu.extend = function(obj) {\n  for (var x, name, i=1, len=arguments.length; i<len; ++i) {\n    x = arguments[i];\n    for (name in x) { obj[name] = x[name]; }\n  }\n  return obj;\n};\n\nu.length = function(x) {\n  return x != null && x.length != null ? x.length : null;\n};\n\nu.keys = function(x) {\n  var keys = [], k;\n  for (k in x) keys.push(k);\n  return keys;\n};\n\nu.vals = function(x) {\n  var vals = [], k;\n  for (k in x) vals.push(x[k]);\n  return vals;\n};\n\nu.toMap = function(list, f) {\n  return (f = u.$(f)) ?\n    list.reduce(function(obj, x) { return (obj[f(x)] = 1, obj); }, {}) :\n    list.reduce(function(obj, x) { return (obj[x] = 1, obj); }, {});\n};\n\nu.keystr = function(values) {\n  // use to ensure consistent key generation across modules\n  var n = values.length;\n  if (!n) return '';\n  for (var s=String(values[0]), i=1; i<n; ++i) {\n    s += '|' + String(values[i]);\n  }\n  return s;\n};\n\n// type checking functions\n\nvar toString = Object.prototype.toString;\n\nu.isObject = function(obj) {\n  return obj === Object(obj);\n};\n\nu.isFunction = function(obj) {\n  return toString.call(obj) === '[object Function]';\n};\n\nu.isString = function(obj) {\n  return typeof value === 'string' || toString.call(obj) === '[object String]';\n};\n\nu.isArray = Array.isArray || function(obj) {\n  return toString.call(obj) === '[object Array]';\n};\n\nu.isNumber = function(obj) {\n  return typeof obj === 'number' || toString.call(obj) === '[object Number]';\n};\n\nu.isBoolean = function(obj) {\n  return obj === true || obj === false || toString.call(obj) == '[object Boolean]';\n};\n\nu.isDate = function(obj) {\n  return toString.call(obj) === '[object Date]';\n};\n\nu.isValid = function(obj) {\n  return obj != null && obj === obj;\n};\n\nu.isBuffer = (typeof Buffer === 'function' && Buffer.isBuffer) || u.false;\n\n// type coercion functions\n\nu.number = function(s) {\n  return s == null || s === '' ? null : +s;\n};\n\nu.boolean = function(s) {\n  return s == null || s === '' ? null : s==='false' ? false : !!s;\n};\n\n// parse a date with optional d3.time-format format\nu.date = function(s, format) {\n  var d = format ? format : Date;\n  return s == null || s === '' ? null : d.parse(s);\n};\n\nu.array = function(x) {\n  return x != null ? (u.isArray(x) ? x : [x]) : [];\n};\n\nu.str = function(x) {\n  return u.isArray(x) ? '[' + x.map(u.str) + ']'\n    : u.isObject(x) || u.isString(x) ?\n      // Output valid JSON and JS source strings.\n      // See http://timelessrepo.com/json-isnt-a-javascript-subset\n      JSON.stringify(x).replace('\\u2028','\\\\u2028').replace('\\u2029', '\\\\u2029')\n    : x;\n};\n\n// data access functions\n\nvar field_re = /\\[(.*?)\\]|[^.\\[]+/g;\n\nu.field = function(f) {\n  return String(f).match(field_re).map(function(d) {\n    return d[0] !== '[' ? d :\n      d[1] !== \"'\" && d[1] !== '\"' ? d.slice(1, -1) :\n      d.slice(2, -2).replace(/\\\\([\"'])/g, '$1');\n  });\n};\n\nu.accessor = function(f) {\n  /* jshint evil: true */\n  return f==null || u.isFunction(f) ? f :\n    u.namedfunc(f, Function('x', 'return x[' + u.field(f).map(u.str).join('][') + '];'));\n};\n\n// short-cut for accessor\nu.$ = u.accessor;\n\nu.mutator = function(f) {\n  var s;\n  return u.isString(f) && (s=u.field(f)).length > 1 ?\n    function(x, v) {\n      for (var i=0; i<s.length-1; ++i) x = x[s[i]];\n      x[s[i]] = v;\n    } :\n    function(x, v) { x[f] = v; };\n};\n\n\nu.$func = function(name, op) {\n  return function(f) {\n    f = u.$(f) || u.identity;\n    var n = name + (u.name(f) ? '_'+u.name(f) : '');\n    return u.namedfunc(n, function(d) { return op(f(d)); });\n  };\n};\n\nu.$valid  = u.$func('valid', u.isValid);\nu.$length = u.$func('length', u.length);\n\nu.$in = function(f, values) {\n  f = u.$(f);\n  var map = u.isArray(values) ? u.toMap(values) : values;\n  return function(d) { return !!map[f(d)]; };\n};\n\n// comparison / sorting functions\n\nu.comparator = function(sort) {\n  var sign = [];\n  if (sort === undefined) sort = [];\n  sort = u.array(sort).map(function(f) {\n    var s = 1;\n    if      (f[0] === '-') { s = -1; f = f.slice(1); }\n    else if (f[0] === '+') { s = +1; f = f.slice(1); }\n    sign.push(s);\n    return u.accessor(f);\n  });\n  return function(a,b) {\n    var i, n, f, x, y;\n    for (i=0, n=sort.length; i<n; ++i) {\n      f = sort[i]; x = f(a); y = f(b);\n      if (x < y) return -1 * sign[i];\n      if (x > y) return sign[i];\n    }\n    return 0;\n  };\n};\n\nu.cmp = function(a, b) {\n  if (a < b) {\n    return -1;\n  } else if (a > b) {\n    return 1;\n  } else if (a >= b) {\n    return 0;\n  } else if (a === null) {\n    return -1;\n  } else if (b === null) {\n    return 1;\n  }\n  return NaN;\n};\n\nu.numcmp = function(a, b) { return a - b; };\n\nu.stablesort = function(array, sortBy, keyFn) {\n  var indices = array.reduce(function(idx, v, i) {\n    return (idx[keyFn(v)] = i, idx);\n  }, {});\n\n  array.sort(function(a, b) {\n    var sa = sortBy(a),\n        sb = sortBy(b);\n    return sa < sb ? -1 : sa > sb ? 1\n         : (indices[keyFn(a)] - indices[keyFn(b)]);\n  });\n\n  return array;\n};\n\n\n// string functions\n\nu.pad = function(s, length, pos, padchar) {\n  padchar = padchar || \" \";\n  var d = length - s.length;\n  if (d <= 0) return s;\n  switch (pos) {\n    case 'left':\n      return strrep(d, padchar) + s;\n    case 'middle':\n    case 'center':\n      return strrep(Math.floor(d/2), padchar) +\n         s + strrep(Math.ceil(d/2), padchar);\n    default:\n      return s + strrep(d, padchar);\n  }\n};\n\nfunction strrep(n, str) {\n  var s = \"\", i;\n  for (i=0; i<n; ++i) s += str;\n  return s;\n}\n\nu.truncate = function(s, length, pos, word, ellipsis) {\n  var len = s.length;\n  if (len <= length) return s;\n  ellipsis = ellipsis !== undefined ? String(ellipsis) : '\\u2026';\n  var l = Math.max(0, length - ellipsis.length);\n\n  switch (pos) {\n    case 'left':\n      return ellipsis + (word ? truncateOnWord(s,l,1) : s.slice(len-l));\n    case 'middle':\n    case 'center':\n      var l1 = Math.ceil(l/2), l2 = Math.floor(l/2);\n      return (word ? truncateOnWord(s,l1) : s.slice(0,l1)) +\n        ellipsis + (word ? truncateOnWord(s,l2,1) : s.slice(len-l2));\n    default:\n      return (word ? truncateOnWord(s,l) : s.slice(0,l)) + ellipsis;\n  }\n};\n\nfunction truncateOnWord(s, len, rev) {\n  var cnt = 0, tok = s.split(truncate_word_re);\n  if (rev) {\n    s = (tok = tok.reverse())\n      .filter(function(w) { cnt += w.length; return cnt <= len; })\n      .reverse();\n  } else {\n    s = tok.filter(function(w) { cnt += w.length; return cnt <= len; });\n  }\n  return s.length ? s.join('').trim() : tok[0].slice(0, len);\n}\n\nvar truncate_word_re = /([\\u0009\\u000A\\u000B\\u000C\\u000D\\u0020\\u00A0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u2028\\u2029\\u3000\\uFEFF])/;\n",
    "var json = typeof JSON !== 'undefined' ? JSON : require('jsonify');\n\nmodule.exports = function (obj, opts) {\n    if (!opts) opts = {};\n    if (typeof opts === 'function') opts = { cmp: opts };\n    var space = opts.space || '';\n    if (typeof space === 'number') space = Array(space+1).join(' ');\n    var cycles = (typeof opts.cycles === 'boolean') ? opts.cycles : false;\n    var replacer = opts.replacer || function(key, value) { return value; };\n\n    var cmp = opts.cmp && (function (f) {\n        return function (node) {\n            return function (a, b) {\n                var aobj = { key: a, value: node[a] };\n                var bobj = { key: b, value: node[b] };\n                return f(aobj, bobj);\n            };\n        };\n    })(opts.cmp);\n\n    var seen = [];\n    return (function stringify (parent, key, node, level) {\n        var indent = space ? ('\\n' + new Array(level + 1).join(space)) : '';\n        var colonSeparator = space ? ': ' : ':';\n\n        if (node && node.toJSON && typeof node.toJSON === 'function') {\n            node = node.toJSON();\n        }\n\n        node = replacer.call(parent, key, node);\n\n        if (node === undefined) {\n            return;\n        }\n        if (typeof node !== 'object' || node === null) {\n            return json.stringify(node);\n        }\n        if (isArray(node)) {\n            var out = [];\n            for (var i = 0; i < node.length; i++) {\n                var item = stringify(node, i, node[i], level+1) || json.stringify(null);\n                out.push(indent + space + item);\n            }\n            return '[' + out.join(',') + indent + ']';\n        }\n        else {\n            if (seen.indexOf(node) !== -1) {\n                if (cycles) return json.stringify('__cycle__');\n                throw new TypeError('Converting circular structure to JSON');\n            }\n            else seen.push(node);\n\n            var keys = objectKeys(node).sort(cmp && cmp(node));\n            var out = [];\n            for (var i = 0; i < keys.length; i++) {\n                var key = keys[i];\n                var value = stringify(node, key, node[key], level+1);\n\n                if(!value) continue;\n\n                var keyValue = json.stringify(key)\n                    + colonSeparator\n                    + value;\n                ;\n                out.push(indent + space + keyValue);\n            }\n            seen.splice(seen.indexOf(node), 1);\n            return '{' + out.join(',') + indent + '}';\n        }\n    })({ '': obj }, '', obj, 0);\n};\n\nvar isArray = Array.isArray || function (x) {\n    return {}.toString.call(x) === '[object Array]';\n};\n\nvar objectKeys = Object.keys || function (obj) {\n    var has = Object.prototype.hasOwnProperty || function () { return true };\n    var keys = [];\n    for (var key in obj) {\n        if (has.call(obj, key)) keys.push(key);\n    }\n    return keys;\n};\n",
    "exports.parse = require('./lib/parse');\nexports.stringify = require('./lib/stringify');\n",
    "var at, // The index of the current character\n    ch, // The current character\n    escapee = {\n        '\"':  '\"',\n        '\\\\': '\\\\',\n        '/':  '/',\n        b:    '\\b',\n        f:    '\\f',\n        n:    '\\n',\n        r:    '\\r',\n        t:    '\\t'\n    },\n    text,\n\n    error = function (m) {\n        // Call error when something is wrong.\n        throw {\n            name:    'SyntaxError',\n            message: m,\n            at:      at,\n            text:    text\n        };\n    },\n    \n    next = function (c) {\n        // If a c parameter is provided, verify that it matches the current character.\n        if (c && c !== ch) {\n            error(\"Expected '\" + c + \"' instead of '\" + ch + \"'\");\n        }\n        \n        // Get the next character. When there are no more characters,\n        // return the empty string.\n        \n        ch = text.charAt(at);\n        at += 1;\n        return ch;\n    },\n    \n    number = function () {\n        // Parse a number value.\n        var number,\n            string = '';\n        \n        if (ch === '-') {\n            string = '-';\n            next('-');\n        }\n        while (ch >= '0' && ch <= '9') {\n            string += ch;\n            next();\n        }\n        if (ch === '.') {\n            string += '.';\n            while (next() && ch >= '0' && ch <= '9') {\n                string += ch;\n            }\n        }\n        if (ch === 'e' || ch === 'E') {\n            string += ch;\n            next();\n            if (ch === '-' || ch === '+') {\n                string += ch;\n                next();\n            }\n            while (ch >= '0' && ch <= '9') {\n                string += ch;\n                next();\n            }\n        }\n        number = +string;\n        if (!isFinite(number)) {\n            error(\"Bad number\");\n        } else {\n            return number;\n        }\n    },\n    \n    string = function () {\n        // Parse a string value.\n        var hex,\n            i,\n            string = '',\n            uffff;\n        \n        // When parsing for string values, we must look for \" and \\ characters.\n        if (ch === '\"') {\n            while (next()) {\n                if (ch === '\"') {\n                    next();\n                    return string;\n                } else if (ch === '\\\\') {\n                    next();\n                    if (ch === 'u') {\n                        uffff = 0;\n                        for (i = 0; i < 4; i += 1) {\n                            hex = parseInt(next(), 16);\n                            if (!isFinite(hex)) {\n                                break;\n                            }\n                            uffff = uffff * 16 + hex;\n                        }\n                        string += String.fromCharCode(uffff);\n                    } else if (typeof escapee[ch] === 'string') {\n                        string += escapee[ch];\n                    } else {\n                        break;\n                    }\n                } else {\n                    string += ch;\n                }\n            }\n        }\n        error(\"Bad string\");\n    },\n\n    white = function () {\n\n// Skip whitespace.\n\n        while (ch && ch <= ' ') {\n            next();\n        }\n    },\n\n    word = function () {\n\n// true, false, or null.\n\n        switch (ch) {\n        case 't':\n            next('t');\n            next('r');\n            next('u');\n            next('e');\n            return true;\n        case 'f':\n            next('f');\n            next('a');\n            next('l');\n            next('s');\n            next('e');\n            return false;\n        case 'n':\n            next('n');\n            next('u');\n            next('l');\n            next('l');\n            return null;\n        }\n        error(\"Unexpected '\" + ch + \"'\");\n    },\n\n    value,  // Place holder for the value function.\n\n    array = function () {\n\n// Parse an array value.\n\n        var array = [];\n\n        if (ch === '[') {\n            next('[');\n            white();\n            if (ch === ']') {\n                next(']');\n                return array;   // empty array\n            }\n            while (ch) {\n                array.push(value());\n                white();\n                if (ch === ']') {\n                    next(']');\n                    return array;\n                }\n                next(',');\n                white();\n            }\n        }\n        error(\"Bad array\");\n    },\n\n    object = function () {\n\n// Parse an object value.\n\n        var key,\n            object = {};\n\n        if (ch === '{') {\n            next('{');\n            white();\n            if (ch === '}') {\n                next('}');\n                return object;   // empty object\n            }\n            while (ch) {\n                key = string();\n                white();\n                next(':');\n                if (Object.hasOwnProperty.call(object, key)) {\n                    error('Duplicate key \"' + key + '\"');\n                }\n                object[key] = value();\n                white();\n                if (ch === '}') {\n                    next('}');\n                    return object;\n                }\n                next(',');\n                white();\n            }\n        }\n        error(\"Bad object\");\n    };\n\nvalue = function () {\n\n// Parse a JSON value. It could be an object, an array, a string, a number,\n// or a word.\n\n    white();\n    switch (ch) {\n    case '{':\n        return object();\n    case '[':\n        return array();\n    case '\"':\n        return string();\n    case '-':\n        return number();\n    default:\n        return ch >= '0' && ch <= '9' ? number() : word();\n    }\n};\n\n// Return the json_parse function. It will have access to all of the above\n// functions and variables.\n\nmodule.exports = function (source, reviver) {\n    var result;\n    \n    text = source;\n    at = 0;\n    ch = ' ';\n    result = value();\n    white();\n    if (ch) {\n        error(\"Syntax error\");\n    }\n\n    // If there is a reviver function, we recursively walk the new structure,\n    // passing each name/value pair to the reviver function for possible\n    // transformation, starting with a temporary root object that holds the result\n    // in an empty key. If there is not a reviver function, we simply return the\n    // result.\n\n    return typeof reviver === 'function' ? (function walk(holder, key) {\n        var k, v, value = holder[key];\n        if (value && typeof value === 'object') {\n            for (k in value) {\n                if (Object.prototype.hasOwnProperty.call(value, k)) {\n                    v = walk(value, k);\n                    if (v !== undefined) {\n                        value[k] = v;\n                    } else {\n                        delete value[k];\n                    }\n                }\n            }\n        }\n        return reviver.call(holder, key, value);\n    }({'': result}, '')) : result;\n};\n",
    "var cx = /[\\u0000\\u00ad\\u0600-\\u0604\\u070f\\u17b4\\u17b5\\u200c-\\u200f\\u2028-\\u202f\\u2060-\\u206f\\ufeff\\ufff0-\\uffff]/g,\n    escapable = /[\\\\\\\"\\x00-\\x1f\\x7f-\\x9f\\u00ad\\u0600-\\u0604\\u070f\\u17b4\\u17b5\\u200c-\\u200f\\u2028-\\u202f\\u2060-\\u206f\\ufeff\\ufff0-\\uffff]/g,\n    gap,\n    indent,\n    meta = {    // table of character substitutions\n        '\\b': '\\\\b',\n        '\\t': '\\\\t',\n        '\\n': '\\\\n',\n        '\\f': '\\\\f',\n        '\\r': '\\\\r',\n        '\"' : '\\\\\"',\n        '\\\\': '\\\\\\\\'\n    },\n    rep;\n\nfunction quote(string) {\n    // If the string contains no control characters, no quote characters, and no\n    // backslash characters, then we can safely slap some quotes around it.\n    // Otherwise we must also replace the offending characters with safe escape\n    // sequences.\n    \n    escapable.lastIndex = 0;\n    return escapable.test(string) ? '\"' + string.replace(escapable, function (a) {\n        var c = meta[a];\n        return typeof c === 'string' ? c :\n            '\\\\u' + ('0000' + a.charCodeAt(0).toString(16)).slice(-4);\n    }) + '\"' : '\"' + string + '\"';\n}\n\nfunction str(key, holder) {\n    // Produce a string from holder[key].\n    var i,          // The loop counter.\n        k,          // The member key.\n        v,          // The member value.\n        length,\n        mind = gap,\n        partial,\n        value = holder[key];\n    \n    // If the value has a toJSON method, call it to obtain a replacement value.\n    if (value && typeof value === 'object' &&\n            typeof value.toJSON === 'function') {\n        value = value.toJSON(key);\n    }\n    \n    // If we were called with a replacer function, then call the replacer to\n    // obtain a replacement value.\n    if (typeof rep === 'function') {\n        value = rep.call(holder, key, value);\n    }\n    \n    // What happens next depends on the value's type.\n    switch (typeof value) {\n        case 'string':\n            return quote(value);\n        \n        case 'number':\n            // JSON numbers must be finite. Encode non-finite numbers as null.\n            return isFinite(value) ? String(value) : 'null';\n        \n        case 'boolean':\n        case 'null':\n            // If the value is a boolean or null, convert it to a string. Note:\n            // typeof null does not produce 'null'. The case is included here in\n            // the remote chance that this gets fixed someday.\n            return String(value);\n            \n        case 'object':\n            if (!value) return 'null';\n            gap += indent;\n            partial = [];\n            \n            // Array.isArray\n            if (Object.prototype.toString.apply(value) === '[object Array]') {\n                length = value.length;\n                for (i = 0; i < length; i += 1) {\n                    partial[i] = str(i, value) || 'null';\n                }\n                \n                // Join all of the elements together, separated with commas, and\n                // wrap them in brackets.\n                v = partial.length === 0 ? '[]' : gap ?\n                    '[\\n' + gap + partial.join(',\\n' + gap) + '\\n' + mind + ']' :\n                    '[' + partial.join(',') + ']';\n                gap = mind;\n                return v;\n            }\n            \n            // If the replacer is an array, use it to select the members to be\n            // stringified.\n            if (rep && typeof rep === 'object') {\n                length = rep.length;\n                for (i = 0; i < length; i += 1) {\n                    k = rep[i];\n                    if (typeof k === 'string') {\n                        v = str(k, value);\n                        if (v) {\n                            partial.push(quote(k) + (gap ? ': ' : ':') + v);\n                        }\n                    }\n                }\n            }\n            else {\n                // Otherwise, iterate through all of the keys in the object.\n                for (k in value) {\n                    if (Object.prototype.hasOwnProperty.call(value, k)) {\n                        v = str(k, value);\n                        if (v) {\n                            partial.push(quote(k) + (gap ? ': ' : ':') + v);\n                        }\n                    }\n                }\n            }\n            \n        // Join all of the member texts together, separated with commas,\n        // and wrap them in braces.\n\n        v = partial.length === 0 ? '{}' : gap ?\n            '{\\n' + gap + partial.join(',\\n' + gap) + '\\n' + mind + '}' :\n            '{' + partial.join(',') + '}';\n        gap = mind;\n        return v;\n    }\n}\n\nmodule.exports = function (value, replacer, space) {\n    var i;\n    gap = '';\n    indent = '';\n    \n    // If the space parameter is a number, make an indent string containing that\n    // many spaces.\n    if (typeof space === 'number') {\n        for (i = 0; i < space; i += 1) {\n            indent += ' ';\n        }\n    }\n    // If the space parameter is a string, it will be used as the indent string.\n    else if (typeof space === 'string') {\n        indent = space;\n    }\n\n    // If there is a replacer, it must be a function or an array.\n    // Otherwise, throw an error.\n    rep = replacer;\n    if (replacer && typeof replacer !== 'function'\n    && (typeof replacer !== 'object' || typeof replacer.length !== 'number')) {\n        throw new Error('JSON.stringify');\n    }\n    \n    // Make a fake root object containing our value under the key of ''.\n    // Return the result of stringifying the value.\n    return str('', {'': value});\n};\n",
    "\"use strict\";\n(function (Type) {\n    Type[Type[\"QUANTITATIVE\"] = 'quantitative'] = \"QUANTITATIVE\";\n    Type[Type[\"ORDINAL\"] = 'ordinal'] = \"ORDINAL\";\n    Type[Type[\"TEMPORAL\"] = 'temporal'] = \"TEMPORAL\";\n    Type[Type[\"NOMINAL\"] = 'nominal'] = \"NOMINAL\";\n})(exports.Type || (exports.Type = {}));\nvar Type = exports.Type;\nexports.QUANTITATIVE = Type.QUANTITATIVE;\nexports.ORDINAL = Type.ORDINAL;\nexports.TEMPORAL = Type.TEMPORAL;\nexports.NOMINAL = Type.NOMINAL;\nexports.SHORT_TYPE = {\n    quantitative: 'Q',\n    temporal: 'T',\n    nominal: 'N',\n    ordinal: 'O'\n};\nexports.TYPE_FROM_SHORT_TYPE = {\n    Q: exports.QUANTITATIVE,\n    T: exports.TEMPORAL,\n    O: exports.ORDINAL,\n    N: exports.NOMINAL\n};\nfunction getFullName(type) {\n    var typeString = type;\n    return exports.TYPE_FROM_SHORT_TYPE[typeString.toUpperCase()] ||\n        typeString.toLowerCase();\n}\nexports.getFullName = getFullName;\n//# sourceMappingURL=Type.js.map",
    "\"use strict\";\n(function (AggregateOp) {\n    AggregateOp[AggregateOp[\"VALUES\"] = 'values'] = \"VALUES\";\n    AggregateOp[AggregateOp[\"COUNT\"] = 'count'] = \"COUNT\";\n    AggregateOp[AggregateOp[\"VALID\"] = 'valid'] = \"VALID\";\n    AggregateOp[AggregateOp[\"MISSING\"] = 'missing'] = \"MISSING\";\n    AggregateOp[AggregateOp[\"DISTINCT\"] = 'distinct'] = \"DISTINCT\";\n    AggregateOp[AggregateOp[\"SUM\"] = 'sum'] = \"SUM\";\n    AggregateOp[AggregateOp[\"MEAN\"] = 'mean'] = \"MEAN\";\n    AggregateOp[AggregateOp[\"AVERAGE\"] = 'average'] = \"AVERAGE\";\n    AggregateOp[AggregateOp[\"VARIANCE\"] = 'variance'] = \"VARIANCE\";\n    AggregateOp[AggregateOp[\"VARIANCEP\"] = 'variancep'] = \"VARIANCEP\";\n    AggregateOp[AggregateOp[\"STDEV\"] = 'stdev'] = \"STDEV\";\n    AggregateOp[AggregateOp[\"STDEVP\"] = 'stdevp'] = \"STDEVP\";\n    AggregateOp[AggregateOp[\"MEDIAN\"] = 'median'] = \"MEDIAN\";\n    AggregateOp[AggregateOp[\"Q1\"] = 'q1'] = \"Q1\";\n    AggregateOp[AggregateOp[\"Q3\"] = 'q3'] = \"Q3\";\n    AggregateOp[AggregateOp[\"MODESKEW\"] = 'modeskew'] = \"MODESKEW\";\n    AggregateOp[AggregateOp[\"MIN\"] = 'min'] = \"MIN\";\n    AggregateOp[AggregateOp[\"MAX\"] = 'max'] = \"MAX\";\n    AggregateOp[AggregateOp[\"ARGMIN\"] = 'argmin'] = \"ARGMIN\";\n    AggregateOp[AggregateOp[\"ARGMAX\"] = 'argmax'] = \"ARGMAX\";\n})(exports.AggregateOp || (exports.AggregateOp = {}));\nvar AggregateOp = exports.AggregateOp;\nexports.AGGREGATE_OPS = [\n    AggregateOp.VALUES,\n    AggregateOp.COUNT,\n    AggregateOp.VALID,\n    AggregateOp.MISSING,\n    AggregateOp.DISTINCT,\n    AggregateOp.SUM,\n    AggregateOp.MEAN,\n    AggregateOp.AVERAGE,\n    AggregateOp.VARIANCE,\n    AggregateOp.VARIANCEP,\n    AggregateOp.STDEV,\n    AggregateOp.STDEVP,\n    AggregateOp.MEDIAN,\n    AggregateOp.Q1,\n    AggregateOp.Q3,\n    AggregateOp.MODESKEW,\n    AggregateOp.MIN,\n    AggregateOp.MAX,\n    AggregateOp.ARGMIN,\n    AggregateOp.ARGMAX,\n];\nexports.SHARED_DOMAIN_OPS = [\n    AggregateOp.MEAN,\n    AggregateOp.AVERAGE,\n    AggregateOp.STDEV,\n    AggregateOp.STDEVP,\n    AggregateOp.MEDIAN,\n    AggregateOp.Q1,\n    AggregateOp.Q3,\n    AggregateOp.MIN,\n    AggregateOp.MAX,\n];\n//# sourceMappingURL=aggregate.js.map",
    "\"use strict\";\nvar util_1 = require('./util');\n(function (Channel) {\n    Channel[Channel[\"X\"] = 'x'] = \"X\";\n    Channel[Channel[\"Y\"] = 'y'] = \"Y\";\n    Channel[Channel[\"ROW\"] = 'row'] = \"ROW\";\n    Channel[Channel[\"COLUMN\"] = 'column'] = \"COLUMN\";\n    Channel[Channel[\"SHAPE\"] = 'shape'] = \"SHAPE\";\n    Channel[Channel[\"SIZE\"] = 'size'] = \"SIZE\";\n    Channel[Channel[\"COLOR\"] = 'color'] = \"COLOR\";\n    Channel[Channel[\"TEXT\"] = 'text'] = \"TEXT\";\n    Channel[Channel[\"DETAIL\"] = 'detail'] = \"DETAIL\";\n    Channel[Channel[\"LABEL\"] = 'label'] = \"LABEL\";\n    Channel[Channel[\"PATH\"] = 'path'] = \"PATH\";\n    Channel[Channel[\"ORDER\"] = 'order'] = \"ORDER\";\n    Channel[Channel[\"OPACITY\"] = 'opacity'] = \"OPACITY\";\n})(exports.Channel || (exports.Channel = {}));\nvar Channel = exports.Channel;\nexports.X = Channel.X;\nexports.Y = Channel.Y;\nexports.ROW = Channel.ROW;\nexports.COLUMN = Channel.COLUMN;\nexports.SHAPE = Channel.SHAPE;\nexports.SIZE = Channel.SIZE;\nexports.COLOR = Channel.COLOR;\nexports.TEXT = Channel.TEXT;\nexports.DETAIL = Channel.DETAIL;\nexports.LABEL = Channel.LABEL;\nexports.PATH = Channel.PATH;\nexports.ORDER = Channel.ORDER;\nexports.OPACITY = Channel.OPACITY;\nexports.CHANNELS = [exports.X, exports.Y, exports.ROW, exports.COLUMN, exports.SIZE, exports.SHAPE, exports.COLOR, exports.PATH, exports.ORDER, exports.OPACITY, exports.TEXT, exports.DETAIL, exports.LABEL];\nexports.UNIT_CHANNELS = util_1.without(exports.CHANNELS, [exports.ROW, exports.COLUMN]);\nexports.UNIT_SCALE_CHANNELS = util_1.without(exports.UNIT_CHANNELS, [exports.PATH, exports.ORDER, exports.DETAIL, exports.TEXT, exports.LABEL]);\nexports.NONSPATIAL_CHANNELS = util_1.without(exports.UNIT_CHANNELS, [exports.X, exports.Y]);\nexports.NONSPATIAL_SCALE_CHANNELS = util_1.without(exports.UNIT_SCALE_CHANNELS, [exports.X, exports.Y]);\n;\nfunction supportMark(channel, mark) {\n    return !!getSupportedMark(channel)[mark];\n}\nexports.supportMark = supportMark;\nfunction getSupportedMark(channel) {\n    switch (channel) {\n        case exports.X:\n        case exports.Y:\n        case exports.COLOR:\n        case exports.DETAIL:\n        case exports.ORDER:\n        case exports.OPACITY:\n        case exports.ROW:\n        case exports.COLUMN:\n            return {\n                point: true, tick: true, rule: true, circle: true, square: true,\n                bar: true, line: true, area: true, text: true\n            };\n        case exports.SIZE:\n            return {\n                point: true, tick: true, rule: true, circle: true, square: true,\n                bar: true, text: true\n            };\n        case exports.SHAPE:\n            return { point: true };\n        case exports.TEXT:\n            return { text: true };\n        case exports.PATH:\n            return { line: true };\n    }\n    return {};\n}\nexports.getSupportedMark = getSupportedMark;\n;\nfunction getSupportedRole(channel) {\n    switch (channel) {\n        case exports.X:\n        case exports.Y:\n        case exports.COLOR:\n        case exports.OPACITY:\n        case exports.LABEL:\n        case exports.DETAIL:\n            return {\n                measure: true,\n                dimension: true\n            };\n        case exports.ROW:\n        case exports.COLUMN:\n        case exports.SHAPE:\n            return {\n                measure: false,\n                dimension: true\n            };\n        case exports.SIZE:\n        case exports.TEXT:\n            return {\n                measure: true,\n                dimension: false\n            };\n        case exports.PATH:\n            return {\n                measure: false,\n                dimension: true\n            };\n    }\n    throw new Error('Invalid encoding channel' + channel);\n}\nexports.getSupportedRole = getSupportedRole;\nfunction hasScale(channel) {\n    return !util_1.contains([exports.DETAIL, exports.PATH, exports.TEXT, exports.LABEL, exports.ORDER], channel);\n}\nexports.hasScale = hasScale;\n//# sourceMappingURL=channel.js.map",
    "\"use strict\";\nvar channel_1 = require('./channel');\nvar util_1 = require('./util');\nfunction countRetinal(encoding) {\n    var count = 0;\n    if (encoding.color) {\n        count++;\n    }\n    if (encoding.opacity) {\n        count++;\n    }\n    if (encoding.size) {\n        count++;\n    }\n    if (encoding.shape) {\n        count++;\n    }\n    return count;\n}\nexports.countRetinal = countRetinal;\nfunction channels(encoding) {\n    return channel_1.CHANNELS.filter(function (channel) {\n        return has(encoding, channel);\n    });\n}\nexports.channels = channels;\nfunction has(encoding, channel) {\n    var channelEncoding = encoding && encoding[channel];\n    return channelEncoding && (channelEncoding.field !== undefined ||\n        (util_1.isArray(channelEncoding) && channelEncoding.length > 0));\n}\nexports.has = has;\nfunction isAggregate(encoding) {\n    return util_1.any(channel_1.CHANNELS, function (channel) {\n        if (has(encoding, channel) && encoding[channel].aggregate) {\n            return true;\n        }\n        return false;\n    });\n}\nexports.isAggregate = isAggregate;\nfunction fieldDefs(encoding) {\n    var arr = [];\n    channel_1.CHANNELS.forEach(function (channel) {\n        if (has(encoding, channel)) {\n            if (util_1.isArray(encoding[channel])) {\n                encoding[channel].forEach(function (fieldDef) {\n                    arr.push(fieldDef);\n                });\n            }\n            else {\n                arr.push(encoding[channel]);\n            }\n        }\n    });\n    return arr;\n}\nexports.fieldDefs = fieldDefs;\n;\nfunction forEach(encoding, f, thisArg) {\n    channelMappingForEach(channel_1.CHANNELS, encoding, f, thisArg);\n}\nexports.forEach = forEach;\nfunction channelMappingForEach(channels, mapping, f, thisArg) {\n    var i = 0;\n    channels.forEach(function (channel) {\n        if (has(mapping, channel)) {\n            if (util_1.isArray(mapping[channel])) {\n                mapping[channel].forEach(function (fieldDef) {\n                    f.call(thisArg, fieldDef, channel, i++);\n                });\n            }\n            else {\n                f.call(thisArg, mapping[channel], channel, i++);\n            }\n        }\n    });\n}\nexports.channelMappingForEach = channelMappingForEach;\nfunction map(encoding, f, thisArg) {\n    return channelMappingMap(channel_1.CHANNELS, encoding, f, thisArg);\n}\nexports.map = map;\nfunction channelMappingMap(channels, mapping, f, thisArg) {\n    var arr = [];\n    channels.forEach(function (channel) {\n        if (has(mapping, channel)) {\n            if (util_1.isArray(mapping[channel])) {\n                mapping[channel].forEach(function (fieldDef) {\n                    arr.push(f.call(thisArg, fieldDef, channel));\n                });\n            }\n            else {\n                arr.push(f.call(thisArg, mapping[channel], channel));\n            }\n        }\n    });\n    return arr;\n}\nexports.channelMappingMap = channelMappingMap;\nfunction reduce(encoding, f, init, thisArg) {\n    return channelMappingReduce(channel_1.CHANNELS, encoding, f, init, thisArg);\n}\nexports.reduce = reduce;\nfunction channelMappingReduce(channels, mapping, f, init, thisArg) {\n    var r = init;\n    channel_1.CHANNELS.forEach(function (channel) {\n        if (has(mapping, channel)) {\n            if (util_1.isArray(mapping[channel])) {\n                mapping[channel].forEach(function (fieldDef) {\n                    r = f.call(thisArg, r, fieldDef, channel);\n                });\n            }\n            else {\n                r = f.call(thisArg, r, mapping[channel], channel);\n            }\n        }\n    });\n    return r;\n}\nexports.channelMappingReduce = channelMappingReduce;\n//# sourceMappingURL=encoding.js.map",
    "\"use strict\";\n(function (Mark) {\n    Mark[Mark[\"AREA\"] = 'area'] = \"AREA\";\n    Mark[Mark[\"BAR\"] = 'bar'] = \"BAR\";\n    Mark[Mark[\"LINE\"] = 'line'] = \"LINE\";\n    Mark[Mark[\"POINT\"] = 'point'] = \"POINT\";\n    Mark[Mark[\"TEXT\"] = 'text'] = \"TEXT\";\n    Mark[Mark[\"TICK\"] = 'tick'] = \"TICK\";\n    Mark[Mark[\"RULE\"] = 'rule'] = \"RULE\";\n    Mark[Mark[\"CIRCLE\"] = 'circle'] = \"CIRCLE\";\n    Mark[Mark[\"SQUARE\"] = 'square'] = \"SQUARE\";\n})(exports.Mark || (exports.Mark = {}));\nvar Mark = exports.Mark;\nexports.AREA = Mark.AREA;\nexports.BAR = Mark.BAR;\nexports.LINE = Mark.LINE;\nexports.POINT = Mark.POINT;\nexports.TEXT = Mark.TEXT;\nexports.TICK = Mark.TICK;\nexports.RULE = Mark.RULE;\nexports.CIRCLE = Mark.CIRCLE;\nexports.SQUARE = Mark.SQUARE;\n//# sourceMappingURL=mark.js.map",
    "\"use strict\";\n(function (TimeUnit) {\n    TimeUnit[TimeUnit[\"YEAR\"] = 'year'] = \"YEAR\";\n    TimeUnit[TimeUnit[\"MONTH\"] = 'month'] = \"MONTH\";\n    TimeUnit[TimeUnit[\"DAY\"] = 'day'] = \"DAY\";\n    TimeUnit[TimeUnit[\"DATE\"] = 'date'] = \"DATE\";\n    TimeUnit[TimeUnit[\"HOURS\"] = 'hours'] = \"HOURS\";\n    TimeUnit[TimeUnit[\"MINUTES\"] = 'minutes'] = \"MINUTES\";\n    TimeUnit[TimeUnit[\"SECONDS\"] = 'seconds'] = \"SECONDS\";\n    TimeUnit[TimeUnit[\"MILLISECONDS\"] = 'milliseconds'] = \"MILLISECONDS\";\n    TimeUnit[TimeUnit[\"YEARMONTH\"] = 'yearmonth'] = \"YEARMONTH\";\n    TimeUnit[TimeUnit[\"YEARMONTHDAY\"] = 'yearmonthday'] = \"YEARMONTHDAY\";\n    TimeUnit[TimeUnit[\"YEARMONTHDATE\"] = 'yearmonthdate'] = \"YEARMONTHDATE\";\n    TimeUnit[TimeUnit[\"YEARDAY\"] = 'yearday'] = \"YEARDAY\";\n    TimeUnit[TimeUnit[\"YEARDATE\"] = 'yeardate'] = \"YEARDATE\";\n    TimeUnit[TimeUnit[\"YEARMONTHDAYHOURS\"] = 'yearmonthdayhours'] = \"YEARMONTHDAYHOURS\";\n    TimeUnit[TimeUnit[\"YEARMONTHDAYHOURSMINUTES\"] = 'yearmonthdayhoursminutes'] = \"YEARMONTHDAYHOURSMINUTES\";\n    TimeUnit[TimeUnit[\"YEARMONTHDAYHOURSMINUTESSECONDS\"] = 'yearmonthdayhoursminutesseconds'] = \"YEARMONTHDAYHOURSMINUTESSECONDS\";\n    TimeUnit[TimeUnit[\"HOURSMINUTES\"] = 'hoursminutes'] = \"HOURSMINUTES\";\n    TimeUnit[TimeUnit[\"HOURSMINUTESSECONDS\"] = 'hoursminutesseconds'] = \"HOURSMINUTESSECONDS\";\n    TimeUnit[TimeUnit[\"MINUTESSECONDS\"] = 'minutesseconds'] = \"MINUTESSECONDS\";\n    TimeUnit[TimeUnit[\"SECONDSMILLISECONDS\"] = 'secondsmilliseconds'] = \"SECONDSMILLISECONDS\";\n})(exports.TimeUnit || (exports.TimeUnit = {}));\nvar TimeUnit = exports.TimeUnit;\nexports.TIMEUNITS = [\n    TimeUnit.YEAR,\n    TimeUnit.MONTH,\n    TimeUnit.DAY,\n    TimeUnit.DATE,\n    TimeUnit.HOURS,\n    TimeUnit.MINUTES,\n    TimeUnit.SECONDS,\n    TimeUnit.MILLISECONDS,\n    TimeUnit.YEARMONTH,\n    TimeUnit.YEARMONTHDAY,\n    TimeUnit.YEARMONTHDATE,\n    TimeUnit.YEARDAY,\n    TimeUnit.YEARDATE,\n    TimeUnit.YEARMONTHDAYHOURS,\n    TimeUnit.YEARMONTHDAYHOURSMINUTES,\n    TimeUnit.YEARMONTHDAYHOURSMINUTESSECONDS,\n    TimeUnit.HOURSMINUTES,\n    TimeUnit.HOURSMINUTESSECONDS,\n    TimeUnit.MINUTESSECONDS,\n    TimeUnit.SECONDSMILLISECONDS,\n];\nfunction format(timeUnit, abbreviated) {\n    if (abbreviated === void 0) { abbreviated = false; }\n    if (!timeUnit) {\n        return undefined;\n    }\n    var timeString = timeUnit.toString();\n    var dateComponents = [];\n    if (timeString.indexOf('year') > -1) {\n        dateComponents.push(abbreviated ? '%y' : '%Y');\n    }\n    if (timeString.indexOf('month') > -1) {\n        dateComponents.push(abbreviated ? '%b' : '%B');\n    }\n    if (timeString.indexOf('day') > -1) {\n        dateComponents.push(abbreviated ? '%a' : '%A');\n    }\n    else if (timeString.indexOf('date') > -1) {\n        dateComponents.push('%d');\n    }\n    var timeComponents = [];\n    if (timeString.indexOf('hours') > -1) {\n        timeComponents.push('%H');\n    }\n    if (timeString.indexOf('minutes') > -1) {\n        timeComponents.push('%M');\n    }\n    if (timeString.indexOf('seconds') > -1) {\n        timeComponents.push('%S');\n    }\n    if (timeString.indexOf('milliseconds') > -1) {\n        timeComponents.push('%L');\n    }\n    var out = [];\n    if (dateComponents.length > 0) {\n        out.push(dateComponents.join('-'));\n    }\n    if (timeComponents.length > 0) {\n        out.push(timeComponents.join(':'));\n    }\n    return out.length > 0 ? out.join(' ') : undefined;\n}\nexports.format = format;\n//# sourceMappingURL=timeunit.js.map",
    "\"use strict\";\nvar stringify = require('json-stable-stringify');\nvar util_1 = require('datalib/src/util');\nexports.keys = util_1.keys;\nexports.extend = util_1.extend;\nexports.duplicate = util_1.duplicate;\nexports.isArray = util_1.isArray;\nexports.vals = util_1.vals;\nexports.truncate = util_1.truncate;\nexports.toMap = util_1.toMap;\nexports.isObject = util_1.isObject;\nexports.isString = util_1.isString;\nexports.isNumber = util_1.isNumber;\nexports.isBoolean = util_1.isBoolean;\nvar generate_1 = require('datalib/src/generate');\nexports.range = generate_1.range;\nvar encoding_1 = require('./encoding');\nexports.has = encoding_1.has;\nvar channel_1 = require('./channel');\nexports.Channel = channel_1.Channel;\nvar util_2 = require('datalib/src/util');\nfunction hash(a) {\n    if (util_2.isString(a) || util_2.isNumber(a) || util_2.isBoolean(a)) {\n        return String(a);\n    }\n    return stringify(a);\n}\nexports.hash = hash;\nfunction contains(array, item) {\n    return array.indexOf(item) > -1;\n}\nexports.contains = contains;\nfunction without(array, excludedItems) {\n    return array.filter(function (item) {\n        return !contains(excludedItems, item);\n    });\n}\nexports.without = without;\nfunction union(array, other) {\n    return array.concat(without(other, array));\n}\nexports.union = union;\nfunction forEach(obj, f, thisArg) {\n    if (obj.forEach) {\n        obj.forEach.call(thisArg, f);\n    }\n    else {\n        for (var k in obj) {\n            if (obj.hasOwnProperty(k)) {\n                f.call(thisArg, obj[k], k, obj);\n            }\n        }\n    }\n}\nexports.forEach = forEach;\nfunction reduce(obj, f, init, thisArg) {\n    if (obj.reduce) {\n        return obj.reduce.call(thisArg, f, init);\n    }\n    else {\n        for (var k in obj) {\n            if (obj.hasOwnProperty(k)) {\n                init = f.call(thisArg, init, obj[k], k, obj);\n            }\n        }\n        return init;\n    }\n}\nexports.reduce = reduce;\nfunction map(obj, f, thisArg) {\n    if (obj.map) {\n        return obj.map.call(thisArg, f);\n    }\n    else {\n        var output = [];\n        for (var k in obj) {\n            if (obj.hasOwnProperty(k)) {\n                output.push(f.call(thisArg, obj[k], k, obj));\n            }\n        }\n        return output;\n    }\n}\nexports.map = map;\nfunction any(arr, f) {\n    var i = 0;\n    for (var k = 0; k < arr.length; k++) {\n        if (f(arr[k], k, i++)) {\n            return true;\n        }\n    }\n    return false;\n}\nexports.any = any;\nfunction all(arr, f) {\n    var i = 0;\n    for (var k = 0; k < arr.length; k++) {\n        if (!f(arr[k], k, i++)) {\n            return false;\n        }\n    }\n    return true;\n}\nexports.all = all;\nfunction flatten(arrays) {\n    return [].concat.apply([], arrays);\n}\nexports.flatten = flatten;\nfunction mergeDeep(dest) {\n    var src = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        src[_i - 1] = arguments[_i];\n    }\n    for (var i = 0; i < src.length; i++) {\n        dest = deepMerge_(dest, src[i]);\n    }\n    return dest;\n}\nexports.mergeDeep = mergeDeep;\n;\nfunction deepMerge_(dest, src) {\n    if (typeof src !== 'object' || src === null) {\n        return dest;\n    }\n    for (var p in src) {\n        if (!src.hasOwnProperty(p)) {\n            continue;\n        }\n        if (src[p] === undefined) {\n            continue;\n        }\n        if (typeof src[p] !== 'object' || src[p] === null) {\n            dest[p] = src[p];\n        }\n        else if (typeof dest[p] !== 'object' || dest[p] === null) {\n            dest[p] = mergeDeep(src[p].constructor === Array ? [] : {}, src[p]);\n        }\n        else {\n            mergeDeep(dest[p], src[p]);\n        }\n    }\n    return dest;\n}\nvar dlBin = require('datalib/src/bins/bins');\nfunction getbins(stats, maxbins) {\n    return dlBin({\n        min: stats.min,\n        max: stats.max,\n        maxbins: maxbins\n    });\n}\nexports.getbins = getbins;\nfunction unique(values, f) {\n    var results = [];\n    var u = {}, v, i, n;\n    for (i = 0, n = values.length; i < n; ++i) {\n        v = f ? f(values[i]) : values[i];\n        if (v in u) {\n            continue;\n        }\n        u[v] = 1;\n        results.push(values[i]);\n    }\n    return results;\n}\nexports.unique = unique;\n;\nfunction warning(message) {\n    console.warn('[VL Warning]', message);\n}\nexports.warning = warning;\nfunction error(message) {\n    console.error('[VL Error]', message);\n}\nexports.error = error;\nfunction differ(dict, other) {\n    for (var key in dict) {\n        if (dict.hasOwnProperty(key)) {\n            if (other[key] && dict[key] && other[key] !== dict[key]) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\nexports.differ = differ;\n//# sourceMappingURL=util.js.map"
  ]
}